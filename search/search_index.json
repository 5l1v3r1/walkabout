{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Walkabout Walkabout Version 1 (LA-CC-11-033) performs random walk particle tracking simulations of solute transport based on groundwater flow solutions that use fully unstructured control volume grids. Walkabout 1.0 is designed to work within the FEHM (Zyvoloski, 2007) code system, and accepts groundwater flow solutions from FEHM and computational mesh descriptions from LaGrit (Los Alamos Grid Toolbox, A typical workflow for Walkabout within the FEHM system would use LaGrit to generate unstructured grids. FEHM then provides a discretized representation of the steady-state flow field to Walkabout. Given this discrete solution, Walkabout then reconstructs a groundwater flow field, and performs the random walk particle tracking calculation. Output is provided in a form compatible with the PLUMECALC software. PLUMECALC may be used to efficiently post-process the particle tracking results from Walkabout to add effects of retention/retardation and arbitrary source histories. An option exists to also record particle positions versus time, thus allowing other post-processing codes or visualization systems to be used. Walkabout Features and Limitations Walkabout works on fully unstructured tetrahedral meshes in three spatial dimensions. Two-dimensional meshes and meshes other than tetrahedral meshes are not supported in Version 1.0. A control-volume solution for steady groundwater flow is required. Finite-element solutions are not supported. Transient flow is not supported in Version 1.0. All particles are launched at time zero. The PlumeCalc (plumecalc.lanl.gov) software maybe used to postprocess the resulting particle tracks to obtain concentration for an arbitrary source history. Particles are moved through the system without decay or retardation. The PlumeCalc (plumecalc.lanl.gov) system may be used to postprocess the particle tracks to obtain concentration with decay and matrix diffusion or other retardation/retention processes. The Burnett and Frind (1987) model for dispersion coefficient is presumed. Full heterogeneity in porosity, liquid density, liquid saturation index, and dispersivity is supported. Walkabout Distribution WALKABOUT is now open source with a BSD-3 license and available on github at: https://github.com/lanl/walkabout","title":"Home"},{"location":"index.html#walkabout","text":"Walkabout Version 1 (LA-CC-11-033) performs random walk particle tracking simulations of solute transport based on groundwater flow solutions that use fully unstructured control volume grids. Walkabout 1.0 is designed to work within the FEHM (Zyvoloski, 2007) code system, and accepts groundwater flow solutions from FEHM and computational mesh descriptions from LaGrit (Los Alamos Grid Toolbox, A typical workflow for Walkabout within the FEHM system would use LaGrit to generate unstructured grids. FEHM then provides a discretized representation of the steady-state flow field to Walkabout. Given this discrete solution, Walkabout then reconstructs a groundwater flow field, and performs the random walk particle tracking calculation. Output is provided in a form compatible with the PLUMECALC software. PLUMECALC may be used to efficiently post-process the particle tracking results from Walkabout to add effects of retention/retardation and arbitrary source histories. An option exists to also record particle positions versus time, thus allowing other post-processing codes or visualization systems to be used.","title":"Walkabout"},{"location":"index.html#walkabout-features-and-limitations","text":"Walkabout works on fully unstructured tetrahedral meshes in three spatial dimensions. Two-dimensional meshes and meshes other than tetrahedral meshes are not supported in Version 1.0. A control-volume solution for steady groundwater flow is required. Finite-element solutions are not supported. Transient flow is not supported in Version 1.0. All particles are launched at time zero. The PlumeCalc (plumecalc.lanl.gov) software maybe used to postprocess the resulting particle tracks to obtain concentration for an arbitrary source history. Particles are moved through the system without decay or retardation. The PlumeCalc (plumecalc.lanl.gov) system may be used to postprocess the particle tracks to obtain concentration with decay and matrix diffusion or other retardation/retention processes. The Burnett and Frind (1987) model for dispersion coefficient is presumed. Full heterogeneity in porosity, liquid density, liquid saturation index, and dispersivity is supported.","title":"Walkabout Features and Limitations"},{"location":"index.html#walkabout-distribution","text":"WALKABOUT is now open source with a BSD-3 license and available on github at: https://github.com/lanl/walkabout","title":"Walkabout Distribution"},{"location":"about/acknowledgements.html","text":"ACKNOWLEDGMENTS The author is grateful to Carl Gable for technical advice on computational geometry issues and for making some low-level computational geometry routines available for this work. The author also thanks George Zyvoloski for careful review of this manuscript. DISCLAIMER This report was prepared as an account of work sponsored by an agency of the United States Government. Neither the United States Government nor any agency thereof, nor any of their employees, nor any of their contractors, subcontractors or their employees, make any warranty, express or implied, or assumes any legal liability or responsibility for the accuracy, completeness, or any third party\u2019s use or the results of such use of any information, apparatus, product or process disclosed, or represents that its use would not infringe privately owned rights. Reference herein to any specific commercial product, process, or service by trade name, trademark, manufacturer, or otherwise, does not necessarily constitute or imply its endorsement, recommendation, or favoring by the United States Government or any agency thereof or its contractors or subcontractors. The view and opinions of authors expressed herein do not necessarily state or reflect those of the United States Government or any agency thereof.","title":"Acknowledgements"},{"location":"about/acknowledgements.html#acknowledgments","text":"The author is grateful to Carl Gable for technical advice on computational geometry issues and for making some low-level computational geometry routines available for this work. The author also thanks George Zyvoloski for careful review of this manuscript.","title":"ACKNOWLEDGMENTS"},{"location":"about/acknowledgements.html#disclaimer","text":"This report was prepared as an account of work sponsored by an agency of the United States Government. Neither the United States Government nor any agency thereof, nor any of their employees, nor any of their contractors, subcontractors or their employees, make any warranty, express or implied, or assumes any legal liability or responsibility for the accuracy, completeness, or any third party\u2019s use or the results of such use of any information, apparatus, product or process disclosed, or represents that its use would not infringe privately owned rights. Reference herein to any specific commercial product, process, or service by trade name, trademark, manufacturer, or otherwise, does not necessarily constitute or imply its endorsement, recommendation, or favoring by the United States Government or any agency thereof or its contractors or subcontractors. The view and opinions of authors expressed herein do not necessarily state or reflect those of the United States Government or any agency thereof.","title":"DISCLAIMER"},{"location":"about/license.html","text":"License Walkabout LANL LA-CC-11-033, Copyright No. C11063 Copyright (c) 2016. Triad National Security, LLC. All rights reserved. This program was produced under U.S. Government contract 89233218CNA000001 for Los Alamos National Laboratory (LANL), which is operated by Triad National Security, LLC for the U.S. Department of Energy/National Nuclear Security Administration. All rights in the program are reserved by Triad National Security, LLC, and the U.S. Department of Energy/National Nuclear Security Administration. The Government is granted for itself and others acting on its behalf a nonexclusive, paid-up, irrevocable worldwide license in this material to reproduce, prepare derivative works, distribute copies to the public, perform publicly and display publicly, and to permit others to do so. If software is modified to produce derivative works, such modified software should be clearly marked, so as not to confuse it with the version available from LANL. Additionally, redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: i. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. ii. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. iii. Neither the name of Triad National Security, LLC, Los Alamos National Laboratory, LANL, the U.S. Government, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY TRIAD NATIONAL SECURITY, LLC AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL TRIAD NATIONAL SECURITY, LLC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"about/license.html#license","text":"Walkabout LANL LA-CC-11-033, Copyright No. C11063 Copyright (c) 2016. Triad National Security, LLC. All rights reserved. This program was produced under U.S. Government contract 89233218CNA000001 for Los Alamos National Laboratory (LANL), which is operated by Triad National Security, LLC for the U.S. Department of Energy/National Nuclear Security Administration. All rights in the program are reserved by Triad National Security, LLC, and the U.S. Department of Energy/National Nuclear Security Administration. The Government is granted for itself and others acting on its behalf a nonexclusive, paid-up, irrevocable worldwide license in this material to reproduce, prepare derivative works, distribute copies to the public, perform publicly and display publicly, and to permit others to do so. If software is modified to produce derivative works, such modified software should be clearly marked, so as not to confuse it with the version available from LANL. Additionally, redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: i. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. ii. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. iii. Neither the name of Triad National Security, LLC, Los Alamos National Laboratory, LANL, the U.S. Government, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY TRIAD NATIONAL SECURITY, LLC AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL TRIAD NATIONAL SECURITY, LLC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"about/release-notes.html","text":"Release Notes 1.0.0 - Initial release","title":"Release Notes"},{"location":"about/release-notes.html#release-notes","text":"1.0.0 - Initial release","title":"Release Notes"},{"location":"supplementary-docs/Parallel_Instructions.html","text":"Intructions for using openMP in walkabout Walkbout will use the maximum number of available threads by default. To change the number of availble threads: export OMP_NUM_THREADS=1 This value can be between 1 and max threads on your machine; 1 will run the code in serial, yet still load openMP libraries.","title":"Intructions for using openMP in walkabout"},{"location":"supplementary-docs/Parallel_Instructions.html#intructions-for-using-openmp-in-walkabout","text":"Walkbout will use the maximum number of available threads by default. To change the number of availble threads: export OMP_NUM_THREADS=1 This value can be between 1 and max threads on your machine; 1 will run the code in serial, yet still load openMP libraries.","title":"Intructions for using openMP in walkabout"},{"location":"supplementary-docs/change_log_history/README.html","text":"Walkabout History of All Change Logs NOTICE: CURRENT VERSION STARTED FROM: walkabout_shane.glog ; SCOTT PAINTER'S walkabout_anch.glog IS ONLY OTHER VERIFIED VERSION SUMMARIES: walkabout_anch.glog: Summary: Scott\u2019s hg walkabout repo on ancho.lanl.gov Begin date: 03/02/11 End date: 11/09/11 Locations:https://ancho.lanl.gov/fehm/hg/walkabout; /scratch/er/dharp/source/walkabout_ancho walkabout_lucia.glog: Summary: Lucia converted the repo to git, added documentation, and implemented some modifications from Zhiming Begin date: 08/20/14 End date: 02/09/15 Locations: /scratch/er/dharp/source/walkabout walkabout_soumi.glog: Summary: Soumi implemented OpenMP parallelization (Note: repo includes Lucia\u2019s repo as the first few changesets) Begin date: 08/20/14 End date: 10/01/15 Locations: /scratch/er/dharp/source/walkabout-soumi walkabout_ecoon.glog: Summary: Ethan created a new repo (no history) from the source code at the end of Lucia\u2019s repo to try to reconfigure the search algorithm. He did implement new search algorithms and provided a test suite for this code that tests the algorithms independently of the rest of walkabout. However, Ethan\u2019s code does not pass the Walkabout test suite. Begin date: 02/24/16 End date: 05/31/16 Locations: /scratch/er/dharp/source/walkabout_ecoon walkabout_shane.glog: Summary: Latest code from Shane that, where he created a new repo starting from his work on Soumi\u2019s code to pass the Walkabout test suite. This version does pass all tests in the test suite, contains Soumi\u2019s OpenMP parallelization, but does seem to have some problems on some of Zhiming\u2019s problems. This is the current version. Begin date: 07/12/16 End date: 10/18/16 Locations: https://github.com/lanl/walkabout.git; /scratch/er/dharp/source/walkabout-shane","title":"Walkabout History of All Change Logs"},{"location":"supplementary-docs/change_log_history/README.html#walkabout-history-of-all-change-logs","text":"","title":"Walkabout History of All Change Logs"},{"location":"supplementary-docs/change_log_history/README.html#notice-current-version-started-from-walkabout_shaneglog-scott-painters-walkabout_anchglog-is-only-other-verified-version","text":"","title":"NOTICE: CURRENT VERSION STARTED FROM: walkabout_shane.glog ; SCOTT PAINTER'S walkabout_anch.glog IS ONLY OTHER VERIFIED VERSION"},{"location":"supplementary-docs/change_log_history/README.html#summaries","text":"walkabout_anch.glog: Summary: Scott\u2019s hg walkabout repo on ancho.lanl.gov Begin date: 03/02/11 End date: 11/09/11 Locations:https://ancho.lanl.gov/fehm/hg/walkabout; /scratch/er/dharp/source/walkabout_ancho walkabout_lucia.glog: Summary: Lucia converted the repo to git, added documentation, and implemented some modifications from Zhiming Begin date: 08/20/14 End date: 02/09/15 Locations: /scratch/er/dharp/source/walkabout walkabout_soumi.glog: Summary: Soumi implemented OpenMP parallelization (Note: repo includes Lucia\u2019s repo as the first few changesets) Begin date: 08/20/14 End date: 10/01/15 Locations: /scratch/er/dharp/source/walkabout-soumi walkabout_ecoon.glog: Summary: Ethan created a new repo (no history) from the source code at the end of Lucia\u2019s repo to try to reconfigure the search algorithm. He did implement new search algorithms and provided a test suite for this code that tests the algorithms independently of the rest of walkabout. However, Ethan\u2019s code does not pass the Walkabout test suite. Begin date: 02/24/16 End date: 05/31/16 Locations: /scratch/er/dharp/source/walkabout_ecoon walkabout_shane.glog: Summary: Latest code from Shane that, where he created a new repo starting from his work on Soumi\u2019s code to pass the Walkabout test suite. This version does pass all tests in the test suite, contains Soumi\u2019s OpenMP parallelization, but does seem to have some problems on some of Zhiming\u2019s problems. This is the current version. Begin date: 07/12/16 End date: 10/18/16 Locations: https://github.com/lanl/walkabout.git; /scratch/er/dharp/source/walkabout-shane","title":"SUMMARIES:"},{"location":"user-guide/1-introduction.html","text":"User\u2019s Manual for Walkabout Version 1.0 1. Introduction Walkabout Version 1.0 (LA-CC-11-033) performs random walk particle tracking simulations of solute transport based on groundwater flow solutions that use fully unstructured control volume grids. Walkabout 1.0 is designed to work within the FEHM (Zyvoloski, 2007) code system, and accepts groundwater flow solutions from FEHM and computational mesh descriptions from LaGrit (Los Alamos Grid Toolbox, http://lagrit.lanl.gov, 2011). Walkabout also provides input to the PLUMECALC (Robinson, et al. 2011) particle tracking post processor. Although designed to work within the FEHM system, other control-volume flow codes and mesh generators could, with appropriate reformatting of the output, provide the flow fields and mesh descriptions. A typical workflow for Walkabout within the FEHM system would use LaGrit to generate unstructured grids. FEHM then provides a discretized representation of the steady-state flow field to Walkabout. Given this discrete solution, Walkabout then reconstructs a groundwater flow field, and performs the random walk particle tracking calculation. Output is provided in a form compatible with the PLUMECALC software. PLUMECALC may be used to efficiently post-process the particle tracking results from Walkabout to add effects of retention/retardation and arbitrary source histories. An option exists to also record particle positions versus time, thus allowing other post-processing codes or visualization systems to be used. Other features and limitations of Walkabout are Walkabout works on fully unstructured tetrahedral meshes in three spatial dimensions. Two-dimensional meshes and meshes other than tetrahedral meshes are not supported in Version 1.0. A control-volume solution for steady groundwater flow is required. Finite- element solutions are not supported. Transient flow is not supported in Version 1.0. All particles are launched at time zero. The PLUMECALC software may be used to postprocess the resulting particle tracks to obtain concentration for an arbitrary source history. Particles are moved through the system without decay or retardation. The PLUMECALC system may be used to postprocess the particle tracks to obtain concentration with decay and matrix diffusion or other retardation/retention processes. The Burnett and Frind (1987) model for dispersion coefficient is presumed. Full heterogeneity in porosity, liquid density, liquid saturation index, and dispersivity is supported. This document summarizes the technical basis for the code, describes the input and output formats, documents verification testing, and provides example test cases that exercise the full range of capabilities.","title":"Introduction"},{"location":"user-guide/1-introduction.html#users-manual-for-walkabout-version-10","text":"","title":"User\u2019s Manual for Walkabout Version 1.0"},{"location":"user-guide/1-introduction.html#1-introduction","text":"Walkabout Version 1.0 (LA-CC-11-033) performs random walk particle tracking simulations of solute transport based on groundwater flow solutions that use fully unstructured control volume grids. Walkabout 1.0 is designed to work within the FEHM (Zyvoloski, 2007) code system, and accepts groundwater flow solutions from FEHM and computational mesh descriptions from LaGrit (Los Alamos Grid Toolbox, http://lagrit.lanl.gov, 2011). Walkabout also provides input to the PLUMECALC (Robinson, et al. 2011) particle tracking post processor. Although designed to work within the FEHM system, other control-volume flow codes and mesh generators could, with appropriate reformatting of the output, provide the flow fields and mesh descriptions. A typical workflow for Walkabout within the FEHM system would use LaGrit to generate unstructured grids. FEHM then provides a discretized representation of the steady-state flow field to Walkabout. Given this discrete solution, Walkabout then reconstructs a groundwater flow field, and performs the random walk particle tracking calculation. Output is provided in a form compatible with the PLUMECALC software. PLUMECALC may be used to efficiently post-process the particle tracking results from Walkabout to add effects of retention/retardation and arbitrary source histories. An option exists to also record particle positions versus time, thus allowing other post-processing codes or visualization systems to be used. Other features and limitations of Walkabout are Walkabout works on fully unstructured tetrahedral meshes in three spatial dimensions. Two-dimensional meshes and meshes other than tetrahedral meshes are not supported in Version 1.0. A control-volume solution for steady groundwater flow is required. Finite- element solutions are not supported. Transient flow is not supported in Version 1.0. All particles are launched at time zero. The PLUMECALC software may be used to postprocess the resulting particle tracks to obtain concentration for an arbitrary source history. Particles are moved through the system without decay or retardation. The PLUMECALC system may be used to postprocess the particle tracks to obtain concentration with decay and matrix diffusion or other retardation/retention processes. The Burnett and Frind (1987) model for dispersion coefficient is presumed. Full heterogeneity in porosity, liquid density, liquid saturation index, and dispersivity is supported. This document summarizes the technical basis for the code, describes the input and output formats, documents verification testing, and provides example test cases that exercise the full range of capabilities.","title":"1. Introduction"},{"location":"user-guide/2-technical-basis.html","text":"2. Technical Basis Particle tracking methods have significant computational advantages in many situations, especially in advection-dominated systems, but clearly require accurate methods for calculating groundwater velocity. The difficulty arises because numerical solution to the flow/pressure equation typically provides flow velocities at specific locations or in some other discretized form; flow velocity at any location within the computational domain of interest must then be reconstructed from the discretized solution. How this is accomplished is highly dependent on the choice of numerical method for the flow/pressure equation and on the type of grid. For structured grids and finite-volume methods, Pollock\u2019s method (Pollock, 1988) is widely used to establish streamlines. In Pollock\u2019s method, an approximate analytical solution is used to move a streamline trajectory from the entrance point on a computational cell to the exit point. This method works directly on fluxes computed in a finite volume approximation and avoids explicit reconstruction of the velocity field. Streamline tracing for unstructured grids is considerably more difficult, requiring in general flow velocity to be available everywhere in the spatial region of interest. Velocity fields must, as a consequence, be reconstructed from a discretized numerical solution. Painter et al. (2011) describe a method for reconstructing velocity fields from control-volume solutions to groundwater flow. Their method is the basis for Walkabout. In contrast to most previous work on streamline tracing on unstructured grids, the emphasis is on fully unstructured grids; i.e., no restrictions are placed on the number of faces on each control volume. 2.1 Random Walk Particle Tracking The relations used to compute the random-walk particle trajectories that simulate the advection dispersion equation have been described in detail elsewhere (e.g. Tompson and Gelhar, 1990, Labolle et al., 1996, Lichtner et al., 2002). The well- known result for particle position at time t + \\Delta t is \\begin{align} \\label{eq:eq1} \\boldsymbol{X_p}(t + \\Delta t) = \\boldsymbol{X_p}(t) + \\boldsymbol{A}[\\boldsymbol{X_p}(t)] \\Delta t + \\boldsymbol{B} [\\boldsymbol{X_p}(t)] \\cdot \\boldsymbol{Z} \\sqrt{\\Delta t} \\end{align} where \\boldsymbol{X_p} is the particle location, \\boldsymbol{Z} is a vector of three independent random numbers (mean of 0, variance of 1), and \\boldsymbol{A} and \\boldsymbol{B} are related to the porosity \\theta , velocity v , and dispersion tensor \\boldsymbol{D} as \\begin{align} \\label{eq:eq2} \\boldsymbol{A} = \\boldsymbol{v} + \\nabla \\cdot \\boldsymbol{D} + \\frac{1}{\\theta} \\boldsymbol{D} \\cdot \\nabla \\theta \\end{align} \\begin{align} \\label{eq:eq3} \\boldsymbol{B} \\cdot \\boldsymbol{B}^T = 2 \\boldsymbol{D} \\end{align} 2.2 Reconstruction and Interpolation of the Velocity Field The velocity \\boldsymbol{v} is clearly needed at all points in space to simulating the random walk particle trajectories. Similarly, the dispersion tensor D, which depends on velocity, is also needed at all points in the domain of interest. The velocity field must be reconstructed from the discretized flow solution. A subset of finite volume methods is considered, wherein the domain of interest has been partitioned into control volumes formed by perpendicular bisectors between adjacent nodes in an underlying triangulation of cell centers. Specifically, a nodal network triangulated into a triangular (2-D) or tetrahedral (3-D) element mesh is presumed to be available. A control volume V_i is constructed around each node i in the triangulation (Figure 1) such that V_i is bounded by the set of perpendicular bisectors between node i and each of its neighbors. If Delaunay triangulation is used to construction the original triangulation, then the control volumes form the Voronoi tessellation. This particular restriction on the control volume based on perpendicular bisectors is imposed explicitly in FEHM and is a subset of the integrated finite difference (Narasimhan and Witherspoon, 1987) discretizations allowed in TOUGH2. Even in the more general case of TOUGH2, external grid generation software that are usually used to construct input mesh, typically impose similar restrictions. Note that this approach makes no assumption about the shape of the finite volume cell. Figure 1. Example triangulation and associated control volumes for a 25-node mesh in 2D. The triangulation is shown with dashed lines. The control-volume elements are shown as solid blue lines. The control volume and element boundaries coincide on the domain boundary. We further consider that a control-volume method with 2-point flux approximation has been used to solve for groundwater head. Specifically, the conservation equation is written for a control volume V_i as \\begin{align} \\label{eq:eq4} S_i \\left| V_i \\right| \\frac{\\partial h_i}{\\partial t} = \\sum_{j \\in N(i)} Q_{ij} \\end{align} where S_i , h_i and V are the specific storage [ L^{-1} ], head [ L ] and volume [ L^3 ] in cell i , respectively. Here N(i) is the list of neighbors adjacent to cell i , Q_{ij} \\equiv \\int_{V_i \\cap V_j} \\boldsymbol{q} \\cdot \\boldsymbol{n_{ij}} ds is volumetric flow rate [ L^3/T ] through the face connecting cells i and j , and n_{ij} is the unit normal on the same face. Our interest is in the velocity vector \\boldsymbol{v} = \\boldsymbol{q} / \\phi in the entire domain. However, the flow solution only provides the Q_{ij} , the normal components of \\boldsymbol{q} at each cell face. The approach proposed and tested here has two steps. In the first step, the Q_{ij} for each cell are used to construct an approximate representative value of \\boldsymbol{q} for that cell (denoted \\boldsymbol{q_i} , for cell i ). Second, the \\boldsymbol{q_i} are then associated with the nodes and the original triangulation (dashed lines in Figure 1) is then used to interpolate to any point in the computational domain. The first step is to reconstruct cell-centered velocities. To this end, we (temporarily) approximate \\boldsymbol{q} as being constant in each cell. The volumetric flow rate across the face common to cells i and j then becomes Q_{ij} = \\boldsymbol{q_i} \\cdot \\boldsymbol{A_{ij}} where \\boldsymbol{A_{ij}} \\equiv A_{ij} \\boldsymbol{n_{ij}} is the vector area for the face. An analogous equation can be written for each face on the cell, thus producing the linear system for each cell i \\begin{align} \\label{eq:eq5} \\boldsymbol{G_i} \\boldsymbol{q_i} = \\boldsymbol{\\gamma_i} \\end{align} Here \\boldsymbol{G_i} is a n \\times d matrix, \\boldsymbol{q_i} is d \\times 1 , and \\boldsymbol{\\gamma_i} is n_i \\times 1 , n_i is number of neighbors for cell i , and d is dimensionality of the space. Each row of the \\boldsymbol{G_i} matrix is the vector area for one face. The columns vector \\boldsymbol{\\gamma_i} is the volumetric flow rate across the faces, as calculated by the control volume flow code. The column vector \\boldsymbol{q_i} , the darcy flux for the cell, is the unknown. In two dimensions, a control volume has a minimum of 3 sides and in many applications involving an unstructured grid will have more. Similarly, a control volume in 3-D has 4 or more sides. Thus, equation \\eqref{eq:eq5} is an n_i \\times d system with n_i > d ; i.e. it is an overdetermined system. Following standard techniques, a least- squares estimate \\hat{q_i} can be constructed for the darcy velocity \\boldsymbol{q_i} \\begin{align} \\label{eq:eq6} \\boldsymbol{\\hat{q_i}} = \\left( \\boldsymbol{G}^T \\boldsymbol{G} \\right) ^ {-1} \\boldsymbol{G}^T \\boldsymbol{\\gamma} \\end{align} where the subscript i on \\boldsymbol{G} and \\gamma has been suppressed for readability. An estimate of the velocity for the cell is then obtained as \\boldsymbol{\\hat{v_i}} = \\frac{\\hat{q_i}}{\\phi} where \\phi is porosity in the cell. For the types of grids considered here, nodes are specified on the domain boundaries (see Figure 1). For nodes on Dirichlet boundaries, Equation \\eqref{eq:eq6} can be applied as for interior nodes. For nodes on Neumann type boundaries, the specified flux constraint must be included, which leads to a linearly constrained linear least squares problem for the boundary flux vector \\boldsymbol{\\hat{q_i^b}} in the i -th cell \\begin{align} \\label{eq:eq7} \\boldsymbol{\\hat{q_i^b}} = \\underset{q_i}{\\mathrm{arg\\,min}} \\left| \\left| \\boldsymbol{G} \\boldsymbol{q_i} - \\gamma \\right| \\right| \\mathrm{\\:subject\\:to\\:} \\boldsymbol{Bq_i} = \\boldsymbol{\\beta} \\end{align} where \\boldsymbol{B} is a n_i^b \\times d matrix, and \\beta is n_i^b \\times 1; n_i^b < d is the number of boundary faces for the cell in question. The matrix \\boldsymbol{B} and the column vector \\boldsymbol{\\beta} are analogous to \\boldsymbol{G} and \\boldsymbol{g} but are written for the subset of faces for the cell in question that lie on the boundary. Explicit solutions are available (e.g. Amemiya, 1985) \\begin{align} \\label{eq:eq8} \\boldsymbol{\\hat{q_i^b}} = \\boldsymbol{\\hat{q_i}} - \\left( \\boldsymbol{G}^T \\boldsymbol{G} \\right) ^ {-1} \\boldsymbol{B} \\left( \\boldsymbol{B}^T \\left( \\boldsymbol{G}^T \\boldsymbol{G} \\right) ^ {-1} \\boldsymbol{B} \\right) ^ {-1} \\left( \\boldsymbol{B\\hat{q_i}} - \\boldsymbol{\\beta} \\right) \\end{align} with Equation \\eqref{eq:eq6} for \\boldsymbol{\\hat{q_i}} . In the event that n_i^b = d (i.e. for nodes at the corners of the domain) the boundary conditions alone determine the nodal velocities. As a simple example for which an intuitively reasonable result is apparent, consider a finite-volume cell on the left boundary of a 2-D rectangular domain with dimensions, intercell fluxes and boundary flux as shown in Figure 2. Unconstrained reconstruction from Equation \\eqref{eq:eq6} gives (-1/2, -3/2) for the darcy flux, equivalent to simply averaging the intercell fluxes on the left and right side to get x-velocity and averaging the top and bottom fluxes to get y-velocity. Using the constrained reconstruction Equation \\eqref{eq:eq8} gives (0, -3/2) . Thus, the normal component of the darcy flux at the boundary is forced to honor the imposed no- flow condition at the boundary. These results could be intuited for the simple geometry shown in Figure 2; the utility of Equations \\eqref{eq:eq6} and \\eqref{eq:eq8} lies in the fact that the procedure works for finite volume cells of any shape. Figure 2. A control volume on the left boundary of a computational domain. Node location is shown as the black dot. The coordinates of the control volume vertices are shown in parenthesis. The volumetric fluxes Q [ L^3/T ] are shown for each face (positive values indicate flow into the cell). The unconstrained velocity reconstruction equation Equation 6 gives (-1/2, -3/2) . The boundary constrained version Equation 7 gives (0,-3/2) ; i.e. it forces the no-flow condition on the left side to be honored. Equations 6 or 8 can be applied to each cell i to obtain a discrete representation of the velocity field. The assumption of constant velocity in each cell, which was used to develop Equations 6 and 8, results in discontinuous velocities at cell faces. Discontinuous velocities can lead to mass balance errors and are generally inadequate for pathline tracing. However, these discontinuities can be easily removed through a simple smoothing procedure. Specifically, we reinterpret each \\boldsymbol{v_i} as being applicable at the nodal position in the original finite element mesh. Using standard barycentric coordinates, the velocities can then be interpolated without discontinuities to any position in the domain. Note also, that derivatives of the velocity, which are needed to properly calculate dispersion tensors in a random walk particle-tracking model, are readily available from the shape functions. Dispersive and Advective Displacements Given the ability to interpolate \\boldsymbol{v} to any point in the domain, it is a simple matter to then solve for a particle\u2019s position. A first-order predictor-corrector method weighted to the corrector is used in Walkabout for the advective displacement. The dispersive step is first-order Euler. The time step is adaptive based on the local value of the effective velocity ( \\boldsymbol{A} term in Eq. \\eqref{eq:eq2} ) and the dispersion tensor. The time step is taken to be the smaller of t_1 and t_2 , where \\begin{align} \\label{eq:eq9} t_1 = f_c \\frac{\\overline{l}}{v} \\end{align} \\begin{align} \\label{eq:eq10} t_2 = f_d \\frac{\\overline{l^2}}{4(\\alpha v + D_m)} \\end{align} where v is groundwater speed, D_m is molecular diffusion coefficient, \\overline{l} is the characteristic linear dimension of the local finite volume cell (cube root of the cell volume), and \\alpha is maximum of the longitudinal, transverse vertical, and transverse horizontal dispersivities. The parameters f_c and f_d are user-defined limits on the time step expressed as fractions of the characteristic times for advective and dispersive displacements, respectively. If an advective time step causes a particle to cross a no-flow boundary, the time step is recursively decreased until the step does not cause the particle to cross the boundary. Dispersive steps that cause a particle to cross a no-flow boundary are rejected.","title":"Technical Basis"},{"location":"user-guide/2-technical-basis.html#2-technical-basis","text":"Particle tracking methods have significant computational advantages in many situations, especially in advection-dominated systems, but clearly require accurate methods for calculating groundwater velocity. The difficulty arises because numerical solution to the flow/pressure equation typically provides flow velocities at specific locations or in some other discretized form; flow velocity at any location within the computational domain of interest must then be reconstructed from the discretized solution. How this is accomplished is highly dependent on the choice of numerical method for the flow/pressure equation and on the type of grid. For structured grids and finite-volume methods, Pollock\u2019s method (Pollock, 1988) is widely used to establish streamlines. In Pollock\u2019s method, an approximate analytical solution is used to move a streamline trajectory from the entrance point on a computational cell to the exit point. This method works directly on fluxes computed in a finite volume approximation and avoids explicit reconstruction of the velocity field. Streamline tracing for unstructured grids is considerably more difficult, requiring in general flow velocity to be available everywhere in the spatial region of interest. Velocity fields must, as a consequence, be reconstructed from a discretized numerical solution. Painter et al. (2011) describe a method for reconstructing velocity fields from control-volume solutions to groundwater flow. Their method is the basis for Walkabout. In contrast to most previous work on streamline tracing on unstructured grids, the emphasis is on fully unstructured grids; i.e., no restrictions are placed on the number of faces on each control volume.","title":"2.  Technical Basis"},{"location":"user-guide/2-technical-basis.html#21-random-walk-particle-tracking","text":"The relations used to compute the random-walk particle trajectories that simulate the advection dispersion equation have been described in detail elsewhere (e.g. Tompson and Gelhar, 1990, Labolle et al., 1996, Lichtner et al., 2002). The well- known result for particle position at time t + \\Delta t is \\begin{align} \\label{eq:eq1} \\boldsymbol{X_p}(t + \\Delta t) = \\boldsymbol{X_p}(t) + \\boldsymbol{A}[\\boldsymbol{X_p}(t)] \\Delta t + \\boldsymbol{B} [\\boldsymbol{X_p}(t)] \\cdot \\boldsymbol{Z} \\sqrt{\\Delta t} \\end{align} where \\boldsymbol{X_p} is the particle location, \\boldsymbol{Z} is a vector of three independent random numbers (mean of 0, variance of 1), and \\boldsymbol{A} and \\boldsymbol{B} are related to the porosity \\theta , velocity v , and dispersion tensor \\boldsymbol{D} as \\begin{align} \\label{eq:eq2} \\boldsymbol{A} = \\boldsymbol{v} + \\nabla \\cdot \\boldsymbol{D} + \\frac{1}{\\theta} \\boldsymbol{D} \\cdot \\nabla \\theta \\end{align} \\begin{align} \\label{eq:eq3} \\boldsymbol{B} \\cdot \\boldsymbol{B}^T = 2 \\boldsymbol{D} \\end{align}","title":"2.1 Random Walk Particle Tracking"},{"location":"user-guide/2-technical-basis.html#22-reconstruction-and-interpolation-of-the-velocity-field","text":"The velocity \\boldsymbol{v} is clearly needed at all points in space to simulating the random walk particle trajectories. Similarly, the dispersion tensor D, which depends on velocity, is also needed at all points in the domain of interest. The velocity field must be reconstructed from the discretized flow solution. A subset of finite volume methods is considered, wherein the domain of interest has been partitioned into control volumes formed by perpendicular bisectors between adjacent nodes in an underlying triangulation of cell centers. Specifically, a nodal network triangulated into a triangular (2-D) or tetrahedral (3-D) element mesh is presumed to be available. A control volume V_i is constructed around each node i in the triangulation (Figure 1) such that V_i is bounded by the set of perpendicular bisectors between node i and each of its neighbors. If Delaunay triangulation is used to construction the original triangulation, then the control volumes form the Voronoi tessellation. This particular restriction on the control volume based on perpendicular bisectors is imposed explicitly in FEHM and is a subset of the integrated finite difference (Narasimhan and Witherspoon, 1987) discretizations allowed in TOUGH2. Even in the more general case of TOUGH2, external grid generation software that are usually used to construct input mesh, typically impose similar restrictions. Note that this approach makes no assumption about the shape of the finite volume cell. Figure 1. Example triangulation and associated control volumes for a 25-node mesh in 2D. The triangulation is shown with dashed lines. The control-volume elements are shown as solid blue lines. The control volume and element boundaries coincide on the domain boundary. We further consider that a control-volume method with 2-point flux approximation has been used to solve for groundwater head. Specifically, the conservation equation is written for a control volume V_i as \\begin{align} \\label{eq:eq4} S_i \\left| V_i \\right| \\frac{\\partial h_i}{\\partial t} = \\sum_{j \\in N(i)} Q_{ij} \\end{align} where S_i , h_i and V are the specific storage [ L^{-1} ], head [ L ] and volume [ L^3 ] in cell i , respectively. Here N(i) is the list of neighbors adjacent to cell i , Q_{ij} \\equiv \\int_{V_i \\cap V_j} \\boldsymbol{q} \\cdot \\boldsymbol{n_{ij}} ds is volumetric flow rate [ L^3/T ] through the face connecting cells i and j , and n_{ij} is the unit normal on the same face. Our interest is in the velocity vector \\boldsymbol{v} = \\boldsymbol{q} / \\phi in the entire domain. However, the flow solution only provides the Q_{ij} , the normal components of \\boldsymbol{q} at each cell face. The approach proposed and tested here has two steps. In the first step, the Q_{ij} for each cell are used to construct an approximate representative value of \\boldsymbol{q} for that cell (denoted \\boldsymbol{q_i} , for cell i ). Second, the \\boldsymbol{q_i} are then associated with the nodes and the original triangulation (dashed lines in Figure 1) is then used to interpolate to any point in the computational domain. The first step is to reconstruct cell-centered velocities. To this end, we (temporarily) approximate \\boldsymbol{q} as being constant in each cell. The volumetric flow rate across the face common to cells i and j then becomes Q_{ij} = \\boldsymbol{q_i} \\cdot \\boldsymbol{A_{ij}} where \\boldsymbol{A_{ij}} \\equiv A_{ij} \\boldsymbol{n_{ij}} is the vector area for the face. An analogous equation can be written for each face on the cell, thus producing the linear system for each cell i \\begin{align} \\label{eq:eq5} \\boldsymbol{G_i} \\boldsymbol{q_i} = \\boldsymbol{\\gamma_i} \\end{align} Here \\boldsymbol{G_i} is a n \\times d matrix, \\boldsymbol{q_i} is d \\times 1 , and \\boldsymbol{\\gamma_i} is n_i \\times 1 , n_i is number of neighbors for cell i , and d is dimensionality of the space. Each row of the \\boldsymbol{G_i} matrix is the vector area for one face. The columns vector \\boldsymbol{\\gamma_i} is the volumetric flow rate across the faces, as calculated by the control volume flow code. The column vector \\boldsymbol{q_i} , the darcy flux for the cell, is the unknown. In two dimensions, a control volume has a minimum of 3 sides and in many applications involving an unstructured grid will have more. Similarly, a control volume in 3-D has 4 or more sides. Thus, equation \\eqref{eq:eq5} is an n_i \\times d system with n_i > d ; i.e. it is an overdetermined system. Following standard techniques, a least- squares estimate \\hat{q_i} can be constructed for the darcy velocity \\boldsymbol{q_i} \\begin{align} \\label{eq:eq6} \\boldsymbol{\\hat{q_i}} = \\left( \\boldsymbol{G}^T \\boldsymbol{G} \\right) ^ {-1} \\boldsymbol{G}^T \\boldsymbol{\\gamma} \\end{align} where the subscript i on \\boldsymbol{G} and \\gamma has been suppressed for readability. An estimate of the velocity for the cell is then obtained as \\boldsymbol{\\hat{v_i}} = \\frac{\\hat{q_i}}{\\phi} where \\phi is porosity in the cell. For the types of grids considered here, nodes are specified on the domain boundaries (see Figure 1). For nodes on Dirichlet boundaries, Equation \\eqref{eq:eq6} can be applied as for interior nodes. For nodes on Neumann type boundaries, the specified flux constraint must be included, which leads to a linearly constrained linear least squares problem for the boundary flux vector \\boldsymbol{\\hat{q_i^b}} in the i -th cell \\begin{align} \\label{eq:eq7} \\boldsymbol{\\hat{q_i^b}} = \\underset{q_i}{\\mathrm{arg\\,min}} \\left| \\left| \\boldsymbol{G} \\boldsymbol{q_i} - \\gamma \\right| \\right| \\mathrm{\\:subject\\:to\\:} \\boldsymbol{Bq_i} = \\boldsymbol{\\beta} \\end{align} where \\boldsymbol{B} is a n_i^b \\times d matrix, and \\beta is n_i^b \\times 1; n_i^b < d is the number of boundary faces for the cell in question. The matrix \\boldsymbol{B} and the column vector \\boldsymbol{\\beta} are analogous to \\boldsymbol{G} and \\boldsymbol{g} but are written for the subset of faces for the cell in question that lie on the boundary. Explicit solutions are available (e.g. Amemiya, 1985) \\begin{align} \\label{eq:eq8} \\boldsymbol{\\hat{q_i^b}} = \\boldsymbol{\\hat{q_i}} - \\left( \\boldsymbol{G}^T \\boldsymbol{G} \\right) ^ {-1} \\boldsymbol{B} \\left( \\boldsymbol{B}^T \\left( \\boldsymbol{G}^T \\boldsymbol{G} \\right) ^ {-1} \\boldsymbol{B} \\right) ^ {-1} \\left( \\boldsymbol{B\\hat{q_i}} - \\boldsymbol{\\beta} \\right) \\end{align} with Equation \\eqref{eq:eq6} for \\boldsymbol{\\hat{q_i}} . In the event that n_i^b = d (i.e. for nodes at the corners of the domain) the boundary conditions alone determine the nodal velocities. As a simple example for which an intuitively reasonable result is apparent, consider a finite-volume cell on the left boundary of a 2-D rectangular domain with dimensions, intercell fluxes and boundary flux as shown in Figure 2. Unconstrained reconstruction from Equation \\eqref{eq:eq6} gives (-1/2, -3/2) for the darcy flux, equivalent to simply averaging the intercell fluxes on the left and right side to get x-velocity and averaging the top and bottom fluxes to get y-velocity. Using the constrained reconstruction Equation \\eqref{eq:eq8} gives (0, -3/2) . Thus, the normal component of the darcy flux at the boundary is forced to honor the imposed no- flow condition at the boundary. These results could be intuited for the simple geometry shown in Figure 2; the utility of Equations \\eqref{eq:eq6} and \\eqref{eq:eq8} lies in the fact that the procedure works for finite volume cells of any shape. Figure 2. A control volume on the left boundary of a computational domain. Node location is shown as the black dot. The coordinates of the control volume vertices are shown in parenthesis. The volumetric fluxes Q [ L^3/T ] are shown for each face (positive values indicate flow into the cell). The unconstrained velocity reconstruction equation Equation 6 gives (-1/2, -3/2) . The boundary constrained version Equation 7 gives (0,-3/2) ; i.e. it forces the no-flow condition on the left side to be honored. Equations 6 or 8 can be applied to each cell i to obtain a discrete representation of the velocity field. The assumption of constant velocity in each cell, which was used to develop Equations 6 and 8, results in discontinuous velocities at cell faces. Discontinuous velocities can lead to mass balance errors and are generally inadequate for pathline tracing. However, these discontinuities can be easily removed through a simple smoothing procedure. Specifically, we reinterpret each \\boldsymbol{v_i} as being applicable at the nodal position in the original finite element mesh. Using standard barycentric coordinates, the velocities can then be interpolated without discontinuities to any position in the domain. Note also, that derivatives of the velocity, which are needed to properly calculate dispersion tensors in a random walk particle-tracking model, are readily available from the shape functions.","title":"2.2  Reconstruction and Interpolation of the Velocity Field"},{"location":"user-guide/2-technical-basis.html#dispersive-and-advective-displacements","text":"Given the ability to interpolate \\boldsymbol{v} to any point in the domain, it is a simple matter to then solve for a particle\u2019s position. A first-order predictor-corrector method weighted to the corrector is used in Walkabout for the advective displacement. The dispersive step is first-order Euler. The time step is adaptive based on the local value of the effective velocity ( \\boldsymbol{A} term in Eq. \\eqref{eq:eq2} ) and the dispersion tensor. The time step is taken to be the smaller of t_1 and t_2 , where \\begin{align} \\label{eq:eq9} t_1 = f_c \\frac{\\overline{l}}{v} \\end{align} \\begin{align} \\label{eq:eq10} t_2 = f_d \\frac{\\overline{l^2}}{4(\\alpha v + D_m)} \\end{align} where v is groundwater speed, D_m is molecular diffusion coefficient, \\overline{l} is the characteristic linear dimension of the local finite volume cell (cube root of the cell volume), and \\alpha is maximum of the longitudinal, transverse vertical, and transverse horizontal dispersivities. The parameters f_c and f_d are user-defined limits on the time step expressed as fractions of the characteristic times for advective and dispersive displacements, respectively. If an advective time step causes a particle to cross a no-flow boundary, the time step is recursively decreased until the step does not cause the particle to cross the boundary. Dispersive steps that cause a particle to cross a no-flow boundary are rejected.","title":"Dispersive and Advective Displacements"},{"location":"user-guide/3-overview-of-input.html","text":"3. Overview of Input Walkabout requires information about the computational mesh, the flow solution, particle source locations, dispersion tensors, and numerical control parameters. Similar to the FEHM code, input is taken from a set of input files, the names of which are provided in the name file. Conventions used here are as follows. Input parameter names, keyword types, and file types are shown in bold font . Literal character strings representing allowed values for keywords or filenames are shown in italics . The monospaced font is used when specifying input file formats. A line consisting of a single colon in the input block means that lines are skipped. An ellipsis (...) indicates that the item is to be repeated. Any text following an exclamation point in an input block is to be regarded as a comment or explanation. 3.1 Running Walkabout Walkabout is started by typing the name of the executable file from a command line interface \u2013 no graphical user interface is provided. There is one optional command line argument giving the relative path to the name file. 3.2 The Name File Names for the various input and output files are contained in the name file. The name file itself may be specified on the command line when invoking Walkabout. Otherwise it defaults to walkabout.files in the current working directory. The format for the name file is as follows filetype:filename : ! repeat as many times as needed The colon separating the filetype keyword and the filename is required. The filetype keywords may come in any order. A line that does not start with a valid filetype is ignored, thus allowing the user to add as many comments as desired to the file. Filenames may be given as full or relative filepaths as defined by the operating system. Valid filetypes are as follows. control \u2013 specifies the control file, which contains control parameters and the dispersion tensor information. Optional. Defaults to control.dat fehmn \u2013 specifies the FEHM geometry file. Required. stor \u2013 specifies the FEHM stor file. Required. ealist \u2013 specifies the element adjacency list. Required. fin \u2013 specifies the FEHM fin file, which contains liquid fluxes. Required. avs \u2013 specifies an FEHM AVS file, which must contain liquid saturation, porosity and liquid density. Required. cbound \u2013 specifies a file containing a list of nodes that lie on boundaries that are closed to transport file. Optional. trajout \u2013 specifies the output filename for trajectory output. Optional. Defaults to walkabout.out . sptr2 \u2013 specifies the output filename for use as PLUMECALC input. Optional. Defaults to walkabout.sptr2 . Details for each file type are given in the appendix.","title":"Overview of Input"},{"location":"user-guide/3-overview-of-input.html#3-overview-of-input","text":"Walkabout requires information about the computational mesh, the flow solution, particle source locations, dispersion tensors, and numerical control parameters. Similar to the FEHM code, input is taken from a set of input files, the names of which are provided in the name file. Conventions used here are as follows. Input parameter names, keyword types, and file types are shown in bold font . Literal character strings representing allowed values for keywords or filenames are shown in italics . The monospaced font is used when specifying input file formats. A line consisting of a single colon in the input block means that lines are skipped. An ellipsis (...) indicates that the item is to be repeated. Any text following an exclamation point in an input block is to be regarded as a comment or explanation.","title":"3.    Overview of Input"},{"location":"user-guide/3-overview-of-input.html#31-running-walkabout","text":"Walkabout is started by typing the name of the executable file from a command line interface \u2013 no graphical user interface is provided. There is one optional command line argument giving the relative path to the name file.","title":"3.1  Running Walkabout"},{"location":"user-guide/3-overview-of-input.html#32-the-name-file","text":"Names for the various input and output files are contained in the name file. The name file itself may be specified on the command line when invoking Walkabout. Otherwise it defaults to walkabout.files in the current working directory. The format for the name file is as follows filetype:filename : ! repeat as many times as needed The colon separating the filetype keyword and the filename is required. The filetype keywords may come in any order. A line that does not start with a valid filetype is ignored, thus allowing the user to add as many comments as desired to the file. Filenames may be given as full or relative filepaths as defined by the operating system. Valid filetypes are as follows. control \u2013 specifies the control file, which contains control parameters and the dispersion tensor information. Optional. Defaults to control.dat fehmn \u2013 specifies the FEHM geometry file. Required. stor \u2013 specifies the FEHM stor file. Required. ealist \u2013 specifies the element adjacency list. Required. fin \u2013 specifies the FEHM fin file, which contains liquid fluxes. Required. avs \u2013 specifies an FEHM AVS file, which must contain liquid saturation, porosity and liquid density. Required. cbound \u2013 specifies a file containing a list of nodes that lie on boundaries that are closed to transport file. Optional. trajout \u2013 specifies the output filename for trajectory output. Optional. Defaults to walkabout.out . sptr2 \u2013 specifies the output filename for use as PLUMECALC input. Optional. Defaults to walkabout.sptr2 . Details for each file type are given in the appendix.","title":"3.2  The Name File"},{"location":"user-guide/4-verification-tests.html","text":"4. Verification Tests Four verification tests are included with the Walkabout distribution. 4.1 Verification Test 1 In the first verification test, particles are released form a point source into a uniform flow aligned with the x-axis. The 1st and 2nd moments of the particle positions at time t have analytical solutions for this configuration. The 1st moment of the particle position is (vt,0,0) , where v is flow speed. The 2nd moment is (2\\alpha_L vt, 2 \\alpha_T^H vt, 2 \\alpha_T^V vt) where \\alpha_L is longitudinal dispersivity, \\alpha_T^H is horizontal transverse dispersivity, and \\alpha_T^V is vertical transverse dispersivity. The flow speed in Test 1 is 0.839 m/day. The computational domain is 100 m x 100 m x 100 m. There are four variants of Test 1, with different dispersivity values (Table 1). Tests 1a \u2013 1c use a regular grid with 26 nodes in each direction. Test 1d uses an unstructured grid with uniform properties (Figure 3). Note that the computational cell size is 4 m in each direction in Tests 1a \u2013 1c. For Test1d, the smallest grid size is 1 m in the direction of flow. The grid Peclet numbers range from 1.33 to infinity for these tests. Results from Verification Tests 1a \u2013 1c are shown in Figures 4 \u2013 7. In each figure, the individual points are from Walkabout and the lines are the theoretical results. Grid \\alpha_L (m) \\alpha_T^H (m) \\alpha_T^V (m) Test 1a Regular, 26x26x26 1 0.1 0.01 Test 1b Regular, 26x26x26 3 0.1 0.3 Test 1c Regular, 26x26x26 0 1 1 Test 1d Unstructured, 179925 cells 1 0.2 0.1 Table 1. Grid type and dispersivity values for Verification Test 1. Figure 3. Horizontal slice from unstructured grid used in Test 1d. The grid is uniform in the vertical direction (not shown). Flow properties are uniform in this test. Flow is from left to right (uniform flow). Figure 4. Result from Verification Test 1a. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines). Figure 5. Result from Verification Test 1b. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines). Figure 6. Result from Verification Test 1c. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines). Figure 7. Result from Verification Test 1d. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines). 4.2 Verification Test 2 Verification Test 2 is designed to test Walkabout in a nonuniform flow field. The grid is the same as Test 1d. Lower permeability is assigned to two regions, creating two non-overlapping barriers (Figure 8). A flow streamline around the two barriers is also shown in Figure 8. The travel distance along the streamline is 115.6 m. The travel time for flow tracer is 230.5 days. In Test2, particles are released at the point (10,50,50) and tracked through the system without transverse dispersion. Two variants are considered with longitudinal dispersivity of 1 and 10 m. Without transverse dispersion, particles should travel along the streamline upon which they are launched. Given the total travel distance and the total travel time along the streamline and adopting a Lagrangian transport perspective, the cumulative distribution of arrival times for particles at the outflow is given by Equation A-2 of Painter et al. (2008) irrespective of the streamline meander or velocity variability along the streamline. A comparison of the Walkabout results and Equation A-2 of Painter et al. (2008) is shown in Figure 9. Figure 8. Horizontal projection of flow streamline for Verification Test 2. Particles are released on this streamline and tracked without transverse dispersion. Figure 9. Results from Verification Test 2. Shown are cumulative distributions of particle arrival time from Walkabout (red dots) compared with theoretical results (blue curves) for dispersivity of 1 m and 10 m. Note the arrival time is shown normalized by the non-dispersive travel time (230.5 days). 4.3 Verification Test 3 Verification Test 3 compares Walkabout streamline tracing to the SPTR module of FEHM without dispersion. The flow configuration is the baffled flow configuration as in Verification Test 2. In this test, 8 streamlines are traced through the system with SPTR and Walkabout. Both trajectories and arrival times are compared. Trajectories are shown in Figure 10. The trajectories overplot each other and only small differences are discernable. Note that Walkabout and SPTR use different streamline tracing algorithms. The good agreement between the two thus helps build confidence in both codes. A cross-plot of SPTR and Walkabout arrival times is shown in Figure 11. The blue line is the line of perfect agreement. Again there is an excellent agreement between the two codes over the entire range tested. Figure 10. Results of Verification Test 3. Shown are horizontal projections of streamlines calculated by SPTR (solid blue) and Walkabout (red dashed). Figure 11. Result of Verification Test 3. Shown is a crossplot (red dots) of Walkabout arrival times versus SPTR times. The solid blue line has slope 1 (line of perfect agreement). 4.4 Verification Test 4 Verification Test 4 is a simple flow-through configuration with cross-section of 100 m \u2022 100 m and length 20,000 m. The groundwater velocity is 1.96 ft/day. There are 106, 4 and 4 nodes in the x-, y-, and z- directions, respectively. The grid is uniform with 200 m spacing in the x direction except for the region from 10000 m to 11000 m where it is refined to 100 m. For this test, Walkabout particle tracks are post-processed to create concentration versus distance at a single time, using the procedure of Robinson et al. (2010). A helper program PCLITE is included with the Walkabout distribution to postprocess the Walkabout results. Concentration versus position at 5500 days is shown in Figure 12. The solid curve is the analytical solution from Kreft and Zuber (1978). The dots are the result of the Walkabout. The agreement is good over the entire domain. The slightly smaller concentration in the first cell is a dilution effect caused by the fact that the particles are released at x=10 m and not on the inlet boundary. Note that there are no artifacts in the refined grid region from 10,000 m to 11,000 m. Figure 12. Result of Verification Test 4. Shown is concentration versus distance at 5500 days. Black dots are the result of Walkabout after post-processing using the procedure of Robinson et al. (2010). The blue curve is the analytical solution from Kreft and Zuber (1978).","title":"Verification Tests"},{"location":"user-guide/4-verification-tests.html#4-verification-tests","text":"Four verification tests are included with the Walkabout distribution.","title":"4. Verification Tests"},{"location":"user-guide/4-verification-tests.html#41-verification-test-1","text":"In the first verification test, particles are released form a point source into a uniform flow aligned with the x-axis. The 1st and 2nd moments of the particle positions at time t have analytical solutions for this configuration. The 1st moment of the particle position is (vt,0,0) , where v is flow speed. The 2nd moment is (2\\alpha_L vt, 2 \\alpha_T^H vt, 2 \\alpha_T^V vt) where \\alpha_L is longitudinal dispersivity, \\alpha_T^H is horizontal transverse dispersivity, and \\alpha_T^V is vertical transverse dispersivity. The flow speed in Test 1 is 0.839 m/day. The computational domain is 100 m x 100 m x 100 m. There are four variants of Test 1, with different dispersivity values (Table 1). Tests 1a \u2013 1c use a regular grid with 26 nodes in each direction. Test 1d uses an unstructured grid with uniform properties (Figure 3). Note that the computational cell size is 4 m in each direction in Tests 1a \u2013 1c. For Test1d, the smallest grid size is 1 m in the direction of flow. The grid Peclet numbers range from 1.33 to infinity for these tests. Results from Verification Tests 1a \u2013 1c are shown in Figures 4 \u2013 7. In each figure, the individual points are from Walkabout and the lines are the theoretical results. Grid \\alpha_L (m) \\alpha_T^H (m) \\alpha_T^V (m) Test 1a Regular, 26x26x26 1 0.1 0.01 Test 1b Regular, 26x26x26 3 0.1 0.3 Test 1c Regular, 26x26x26 0 1 1 Test 1d Unstructured, 179925 cells 1 0.2 0.1 Table 1. Grid type and dispersivity values for Verification Test 1. Figure 3. Horizontal slice from unstructured grid used in Test 1d. The grid is uniform in the vertical direction (not shown). Flow properties are uniform in this test. Flow is from left to right (uniform flow). Figure 4. Result from Verification Test 1a. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines). Figure 5. Result from Verification Test 1b. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines). Figure 6. Result from Verification Test 1c. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines). Figure 7. Result from Verification Test 1d. Shown on left are 1st (red dots) and 2nd (black dots) moments in x-position from Walkabout along with theoretical results (lines). Shown on right are 2nd moments in y-position (red dots) and z-position (black dots) along with theoretical results (lines).","title":"4.1 Verification Test 1"},{"location":"user-guide/4-verification-tests.html#42-verification-test-2","text":"Verification Test 2 is designed to test Walkabout in a nonuniform flow field. The grid is the same as Test 1d. Lower permeability is assigned to two regions, creating two non-overlapping barriers (Figure 8). A flow streamline around the two barriers is also shown in Figure 8. The travel distance along the streamline is 115.6 m. The travel time for flow tracer is 230.5 days. In Test2, particles are released at the point (10,50,50) and tracked through the system without transverse dispersion. Two variants are considered with longitudinal dispersivity of 1 and 10 m. Without transverse dispersion, particles should travel along the streamline upon which they are launched. Given the total travel distance and the total travel time along the streamline and adopting a Lagrangian transport perspective, the cumulative distribution of arrival times for particles at the outflow is given by Equation A-2 of Painter et al. (2008) irrespective of the streamline meander or velocity variability along the streamline. A comparison of the Walkabout results and Equation A-2 of Painter et al. (2008) is shown in Figure 9. Figure 8. Horizontal projection of flow streamline for Verification Test 2. Particles are released on this streamline and tracked without transverse dispersion. Figure 9. Results from Verification Test 2. Shown are cumulative distributions of particle arrival time from Walkabout (red dots) compared with theoretical results (blue curves) for dispersivity of 1 m and 10 m. Note the arrival time is shown normalized by the non-dispersive travel time (230.5 days).","title":"4.2 Verification Test 2"},{"location":"user-guide/4-verification-tests.html#43-verification-test-3","text":"Verification Test 3 compares Walkabout streamline tracing to the SPTR module of FEHM without dispersion. The flow configuration is the baffled flow configuration as in Verification Test 2. In this test, 8 streamlines are traced through the system with SPTR and Walkabout. Both trajectories and arrival times are compared. Trajectories are shown in Figure 10. The trajectories overplot each other and only small differences are discernable. Note that Walkabout and SPTR use different streamline tracing algorithms. The good agreement between the two thus helps build confidence in both codes. A cross-plot of SPTR and Walkabout arrival times is shown in Figure 11. The blue line is the line of perfect agreement. Again there is an excellent agreement between the two codes over the entire range tested. Figure 10. Results of Verification Test 3. Shown are horizontal projections of streamlines calculated by SPTR (solid blue) and Walkabout (red dashed). Figure 11. Result of Verification Test 3. Shown is a crossplot (red dots) of Walkabout arrival times versus SPTR times. The solid blue line has slope 1 (line of perfect agreement).","title":"4.3 Verification Test 3"},{"location":"user-guide/4-verification-tests.html#44-verification-test-4","text":"Verification Test 4 is a simple flow-through configuration with cross-section of 100 m \u2022 100 m and length 20,000 m. The groundwater velocity is 1.96 ft/day. There are 106, 4 and 4 nodes in the x-, y-, and z- directions, respectively. The grid is uniform with 200 m spacing in the x direction except for the region from 10000 m to 11000 m where it is refined to 100 m. For this test, Walkabout particle tracks are post-processed to create concentration versus distance at a single time, using the procedure of Robinson et al. (2010). A helper program PCLITE is included with the Walkabout distribution to postprocess the Walkabout results. Concentration versus position at 5500 days is shown in Figure 12. The solid curve is the analytical solution from Kreft and Zuber (1978). The dots are the result of the Walkabout. The agreement is good over the entire domain. The slightly smaller concentration in the first cell is a dilution effect caused by the fact that the particles are released at x=10 m and not on the inlet boundary. Note that there are no artifacts in the refined grid region from 10,000 m to 11,000 m. Figure 12. Result of Verification Test 4. Shown is concentration versus distance at 5500 days. Black dots are the result of Walkabout after post-processing using the procedure of Robinson et al. (2010). The blue curve is the analytical solution from Kreft and Zuber (1978).","title":"4.4 Verification Test 4"},{"location":"user-guide/5-acceptance-tests.html","text":"5. Acceptance Tests 5.1 Acceptance Test 1 Acceptance Test 1 uses the same unstructured grid and flow barriers as in Verification Test 3. Particles are tracked with and without dispersion. The test is intended to check for non-physical effects on a realistic flow/transport configuration involving strong permeability contrasts and unstructured grids. Results with and without dispersion are shown in Figures 13 \u2013 15. In producing these figures, Walkabout particle tracks were generated assuming an instantaneous release of particles. These particle tracks were then used to generate concentrations for a continuous source following the procedure of Robinson et al. (2010). Anomalous accumulation of particles in low-permeability zones is a long-standing issue with random-walk particle tracking codes. Even in the case of relatively large dispersion (smallest grid Peclet number in Figure 15 is 0.25), no significant accumulation of particles is observed in low permeability zones. Figure 13. Horizontal slice of concentration from Acceptance Test 1 for the case without dispersion. Figure 14. Horizontal slice of concentration from Acceptance Test 1. The longitudinal, transverse horizontal and transverse vertical dispersivity values are 1 m, 0.1 m and 0 m, respectively. The color map is the same as in Figure 13 Figure 15. Horizontal slice of concentration from Acceptance Test 1. The longitudinal, transverse horizontal and transverse vertical dispersivity values are 5 m, 0.5 m and 0 m, respectively. The color map is the same as in Figure 13. 5.2 Acceptance Test 2 Acceptance Test 2 is designed to further test for anomalous mass accumulation in low permeability cells. This test uses a structured grid. There are two barriers to flow separated by a one-cell gap. Results are shown in Figure 16. No anomalous mass accumulation is apparent in this demanding test. Figure 16. Horizontal slice of concentration from Acceptance Test 1. The longitudinal, transverse horizontal and transverse vertical dispersivity values are 5 m, 0.5 m and 0 m, respectively. The color map is the same as in Figure 13.","title":"Acceptance Tests"},{"location":"user-guide/5-acceptance-tests.html#5-acceptance-tests","text":"","title":"5.  Acceptance Tests"},{"location":"user-guide/5-acceptance-tests.html#51-acceptance-test-1","text":"Acceptance Test 1 uses the same unstructured grid and flow barriers as in Verification Test 3. Particles are tracked with and without dispersion. The test is intended to check for non-physical effects on a realistic flow/transport configuration involving strong permeability contrasts and unstructured grids. Results with and without dispersion are shown in Figures 13 \u2013 15. In producing these figures, Walkabout particle tracks were generated assuming an instantaneous release of particles. These particle tracks were then used to generate concentrations for a continuous source following the procedure of Robinson et al. (2010). Anomalous accumulation of particles in low-permeability zones is a long-standing issue with random-walk particle tracking codes. Even in the case of relatively large dispersion (smallest grid Peclet number in Figure 15 is 0.25), no significant accumulation of particles is observed in low permeability zones. Figure 13. Horizontal slice of concentration from Acceptance Test 1 for the case without dispersion. Figure 14. Horizontal slice of concentration from Acceptance Test 1. The longitudinal, transverse horizontal and transverse vertical dispersivity values are 1 m, 0.1 m and 0 m, respectively. The color map is the same as in Figure 13 Figure 15. Horizontal slice of concentration from Acceptance Test 1. The longitudinal, transverse horizontal and transverse vertical dispersivity values are 5 m, 0.5 m and 0 m, respectively. The color map is the same as in Figure 13.","title":"5.1 Acceptance Test 1"},{"location":"user-guide/5-acceptance-tests.html#52-acceptance-test-2","text":"Acceptance Test 2 is designed to further test for anomalous mass accumulation in low permeability cells. This test uses a structured grid. There are two barriers to flow separated by a one-cell gap. Results are shown in Figure 16. No anomalous mass accumulation is apparent in this demanding test. Figure 16. Horizontal slice of concentration from Acceptance Test 1. The longitudinal, transverse horizontal and transverse vertical dispersivity values are 5 m, 0.5 m and 0 m, respectively. The color map is the same as in Figure 13.","title":"5.2 Acceptance Test 2"},{"location":"user-guide/6-known-issues.html","text":"6 Known Issues There are two known issues with Walkabout Version 1.0. First, boundary facets for cells on a specified no-flow boundary must be aligned with the principal coordinate axes. This limitation is a consequence of the available information from the LaGrit software, which identifies boundary facets as \u201ctop\u201d, \u201cbottom\u201d, \u201cleft\u201d, etc., but does not provide a normal vector for each facet. The second issue that the user should be aware of is that purely advective scenarios can, under certain conditions, produce spiky concentrations when post-processed by PLUMECALC or similar software. This phenomenon is demonstrated in Figure 17. At the end of each time step, Walkabout checks to see whether a particle has left the current finite volume cell. If the particle has left the cell, then the exit time is recorded for post-processing by PLUMECALC. When only advection is modeled, the spatial step is constant and the time spent is rounded to the next larger integer multiple of the fixed time step for some cells and to the next smaller integer multiple of the time step for other cells, thus creating the spiky pattern shown in Figure 17. When averaged over several cells, the concentration is correct. In addition, any process that adds a random component to the time spent in a cell (e.g. dispersion, matrix diffusion, spread in the initial positions of the particles) reduces or eliminates this artifact. The artifact may also be eliminated by choosing the advective time step to make the number of time steps within each cell exactly an integer (Figure 18). Figure 17. Concentration calculated by post-processing the results of Walkabout using the algorithm of Robinson et al. (2010) showing an concentration artifact associated with purely advective transport. Rounding of the particle dwell time in the cell because of the finite-sized step size causes concentration in every 5th cell to be overestimated with the rest underestimated slightly. The position of the front is in the correct position and the 5-cell average is correct in this case. Any process that adds a random component to the dwell time in a cell reduces or eliminates the artifact. It may also be eliminated by careful selection of the time step control parameters. Figure 18. Same as in Figure 17, but with time step chosen to make the number of steps in each cell an integer. The artifact of Figure 17 is eliminated in this case.","title":"Known Issues"},{"location":"user-guide/6-known-issues.html#6-known-issues","text":"There are two known issues with Walkabout Version 1.0. First, boundary facets for cells on a specified no-flow boundary must be aligned with the principal coordinate axes. This limitation is a consequence of the available information from the LaGrit software, which identifies boundary facets as \u201ctop\u201d, \u201cbottom\u201d, \u201cleft\u201d, etc., but does not provide a normal vector for each facet. The second issue that the user should be aware of is that purely advective scenarios can, under certain conditions, produce spiky concentrations when post-processed by PLUMECALC or similar software. This phenomenon is demonstrated in Figure 17. At the end of each time step, Walkabout checks to see whether a particle has left the current finite volume cell. If the particle has left the cell, then the exit time is recorded for post-processing by PLUMECALC. When only advection is modeled, the spatial step is constant and the time spent is rounded to the next larger integer multiple of the fixed time step for some cells and to the next smaller integer multiple of the time step for other cells, thus creating the spiky pattern shown in Figure 17. When averaged over several cells, the concentration is correct. In addition, any process that adds a random component to the time spent in a cell (e.g. dispersion, matrix diffusion, spread in the initial positions of the particles) reduces or eliminates this artifact. The artifact may also be eliminated by choosing the advective time step to make the number of time steps within each cell exactly an integer (Figure 18). Figure 17. Concentration calculated by post-processing the results of Walkabout using the algorithm of Robinson et al. (2010) showing an concentration artifact associated with purely advective transport. Rounding of the particle dwell time in the cell because of the finite-sized step size causes concentration in every 5th cell to be overestimated with the rest underestimated slightly. The position of the front is in the correct position and the 5-cell average is correct in this case. Any process that adds a random component to the dwell time in a cell reduces or eliminates the artifact. It may also be eliminated by careful selection of the time step control parameters. Figure 18. Same as in Figure 17, but with time step chosen to make the number of steps in each cell an integer. The artifact of Figure 17 is eliminated in this case.","title":"6 Known Issues"},{"location":"user-guide/7-conclusions.html","text":"7 Conclusions Walkabout performs random walk particle tracking simulations on structured or fully unstructured grids. It is designed to work with LaGrit, FEHM and PLUMECALC. Based on verification and acceptance test results shown here, Walkabout Version 1 is sufficiently developed and tested to deploy in radionuclide transport calculations.","title":"Conclusions"},{"location":"user-guide/7-conclusions.html#7-conclusions","text":"Walkabout performs random walk particle tracking simulations on structured or fully unstructured grids. It is designed to work with LaGrit, FEHM and PLUMECALC. Based on verification and acceptance test results shown here, Walkabout Version 1 is sufficiently developed and tested to deploy in radionuclide transport calculations.","title":"7   Conclusions"},{"location":"user-guide/appendix-A.html","text":"Appendix A Input and Output NAME File Appendix A describes the Walkabout input and output files. The names for these files are contained in the Walkabout name file. The name file may be specified on the command line when invoking Walkabout. Otherwise it defaults to walkabout.files in the current working directory. The format for the name file is as follows: filetype:filename : ! repeat as many times as needed A line that does not start with a valid filetype is ignored, thus allowing the user to add as many comments as desired to the file. Filenames may be given as full or relative filepaths as defined by the operating system. Each file is described in the section indicated. Note, some filetypes have default names as indicated below, and therefore are optional for the name file. Required filetypes for NAME file: control specifies the control file, which contains control parameters and the dispersion tensor information. Default name is control.dat Appendix A.1 Control fehmn specifies the geometry in FEHM mesh format. Appendix A.2 Geometry stor specifies the geometric coefficients in stor format. Appendix A.2 Geometry ealist specifies the element adjacency list. Appendix A.2 Geometry fin or ama specifies the FEHM fin file or AMANZI ama file which contains liquid fluxes. Appendix A.3 Model avs specifies an AVS format file with node properties liquid saturation, porosity and liquid density. Appendix A.3 Model Optional filetypes for NAME file: cbound this file may be used to list nodes that lie on outside boundaries that are closed to transport. Appendix A.2 Geometry trajout specifies the output filename for trajectory output. Default name will be walkabout.out Appendix A.4 Output sptr2 specifies the output filename to use for the PLUMECALC file. Default name will be walkabout.sptr2 Appendix A.4 Output The following sections Appendix A.1 to A.4 describe these Walkabout filetypes and their formats.","title":"Appendix A Files"},{"location":"user-guide/appendix-A.html#appendix-a-input-and-output","text":"","title":"Appendix A Input and Output"},{"location":"user-guide/appendix-A.html#name-file","text":"Appendix A describes the Walkabout input and output files. The names for these files are contained in the Walkabout name file. The name file may be specified on the command line when invoking Walkabout. Otherwise it defaults to walkabout.files in the current working directory. The format for the name file is as follows: filetype:filename : ! repeat as many times as needed A line that does not start with a valid filetype is ignored, thus allowing the user to add as many comments as desired to the file. Filenames may be given as full or relative filepaths as defined by the operating system. Each file is described in the section indicated. Note, some filetypes have default names as indicated below, and therefore are optional for the name file.","title":"NAME File"},{"location":"user-guide/appendix-A.html#required-filetypes-for-name-file","text":"control specifies the control file, which contains control parameters and the dispersion tensor information. Default name is control.dat Appendix A.1 Control fehmn specifies the geometry in FEHM mesh format. Appendix A.2 Geometry stor specifies the geometric coefficients in stor format. Appendix A.2 Geometry ealist specifies the element adjacency list. Appendix A.2 Geometry fin or ama specifies the FEHM fin file or AMANZI ama file which contains liquid fluxes. Appendix A.3 Model avs specifies an AVS format file with node properties liquid saturation, porosity and liquid density. Appendix A.3 Model","title":"Required filetypes for NAME file:"},{"location":"user-guide/appendix-A.html#optional-filetypes-for-name-file","text":"cbound this file may be used to list nodes that lie on outside boundaries that are closed to transport. Appendix A.2 Geometry trajout specifies the output filename for trajectory output. Default name will be walkabout.out Appendix A.4 Output sptr2 specifies the output filename to use for the PLUMECALC file. Default name will be walkabout.sptr2 Appendix A.4 Output The following sections Appendix A.1 to A.4 describe these Walkabout filetypes and their formats.","title":"Optional filetypes for NAME file:"},{"location":"user-guide/appendix-A1.html","text":"Appendix A.1 Control The control file contains two keyword blocks that allow the user to specify dispersion tensors and particle start locations. In addition, it contains numerical parameters that control the functioning of the particle tracking simulation. A.1.1 INITIAL keyword block Particle starting positions are specified in the INITIAL keyword block. The keyword block may be placed anywhere in the control file. The form of the INITIAL keyword block is as follows INITIAL ! case sensitive dist_type num_part ! conditional input depends on dist_type location_info ! conditional input depends on dist_type : ! repeat as needed The dist_type keyword specifies how particles are to be distributed. Allowed values are MANUAL , UNIFORM , and RANDOM (case sensitive). If MANUAL is specified then a particle location must be specified for each particle. In this case, the number of particles should be entered in the num_part field and start coordinates for each particle should be entered ( location_info field, one x,y,z triplet on each line). If RANDOM is specified, the particles are to be distributed randomly in a user- specified rectangular box. In this case, the number of particles should be entered in the num_part field and the location_info has two lines representing locations of minimum (first line) and maximum (second line) coordinates of the bounding box for the start region. The UNIFORM keyword is similar to the RANDOM keyword except that particles will be distributed uniformly in the region of interest. In this case, three integers should be entered in the num_part representing spacing in the x, y, and z directions. The location_info lines are identical to the RANDOM case. A.1.2 DTENSOR keyword block Dispersion tensor information is given in the DTENSOR keyword block. The keyword block may be placed anywhere in the control file. The form of the INITIAL keyword block is as follows DTENSOR region_specifier ! type ! tensor type dispersivities ! conditional on type : ! repeat above three lines as many times as needed END ! terminates the keyword block The region_specifier comes in two forms. If three integers ( min max stride ) are given, then the region comprises the nodes between min and max (inclusive) with the specified stride. The value 0 for max is interpreted as the last node in the grid. This format is identical to FEHM\u2019s format for specifying nodes in a region. If region_specifier starts with a nonnumeric character, then it is interpreted as a filename that contains zone information. In this case, the first field of the region_specifier is the filename and the second field of the region_specifier is the zone number in the specified zone file. The zone file should be in FEHM zone file format (See Appendix A.2 Mesh Geometry Files). The type holds a keyword that specifies the type of the dispersion tensor. In Version 1.0, the only allowed value is BF denoting the Burnett and Frind tensor. The dispersivity_values required for the Burnett and Frind tensor are (in order) longitudinal dispersivity, horizontal transverse dispersivity, vertical transverse dispersivity, and molecular diffusion coefficient. The dispersivities have units of m. The molecular diffusion coefficient has units of m^2/\\mathrm{day} . A.1.3 Numerical control parameters Several numerical control parameters may also be specified in the control file. If not defined in the control file, defaults will apply. The parameters are scalar values and may be written in any order. The form is parameter_name parameter_value where parameter_name is one of the following dtmax \u2013 maximum allowed value of time step in days. Optional. Defaults to 1000 dt0 \u2013 initial time step in days. Optional. Defaults to 0.01 maxstretch \u2013 maximum allowed time step relative to previous time step (dimensionless). Must be greater than 1. Optional. Defaults to 1.2 maxsteps \u2013 maximum number of time steps in the simulation. A particle is terminated if maxstep timesteps are taken. Optional defaults to 100000 dxtarget \u2013 Courant factor, maximum allowed time step relative to time required to advect across the cell. Optional. Defaults to 0.1 dttarget \u2013 maximum allowed time step as fraction of characteristic time to disperse across cell. Optional. Defaults to 0.1 toutfreq \u2013 number of time steps between output of trajectory data. If 0 is specified, no trajectory output is written. Optional. Defaults to 0 A.1.4 Example control files In this example shown in Figure A1-1, 10000 particles are released randomly in the region between (10,-50,-50) and (10,50,50). The region is indicated by 1 0 0 which is all grid nodes. The dispersivity_values are 40. for longitudinal dispersivity and 0. for horizontal transverse dispersivity, vertical transverse dispersivity, and molecular diffusion coefficient. Title \u2013 the title goes here dtmax 100 !maximum step size days dxtarget 0.1 !relative to grid size dttarget 0.1 ! relative to characteristic dispersion time maxstretch 1.3 maxsteps 100000 ! maximum number of steps allowed dt0 0.1 ! initial step days toutfreq 0 !no trajectory output INITIAL RANDOM 10000 10.0 -50.0 -50.0 10.0 50.0 50.0 DTENSOR 1 0 0 BF !burnett and frind tensor 40. 0.0 0.0 0.0 !dispersivity values END Figure A1-1. Example control file. In this example shown in Figure A1-2, different transport parameters are applied to different regions of the grid using FEHM style zone files. In this example, there are 5 node regions (zone numbers 4, 9, 11, 12, and 14) in the model domain and are defined in walk06337.h5_material.zone. The zone file format is described under cbound in Appendix A.2 Geometry . dtmax 365.25 dt0 0.10 maxstretch 1.3 maxsteps 100000 dxtarget 0.1 dttarget 0.1 seed 7127 toutfreq 0 INITIAL MANUAL 5 8200.2050 30.0000 1812.0000 8200.2050 30.0000 1826.0000 8200.6150 30.0000 1840.0000 8200.6150 30.0000 1854.0000 8200.6150 30.0000 1868.0000 DTENSOR walk06337.h5_material.zone 4 BF 1.0 0.1 0.1 0.0 walk06337.h5_material.zone 9 BF 3.0 0.3 0.1 0.0 walk06337.h5_material.zone 11 BF 10.0 1.0 1.0 0.0 walk06337.h5_material.zone 12 BF 2.0 0.1 0.1 0.0 walk06337.h5_material.zone 14 BF 5.0 0.5 0.5 0.0 END Figure A1-2. Example control file with multiple regions.","title":"A.1 Control"},{"location":"user-guide/appendix-A1.html#appendix-a1-control","text":"The control file contains two keyword blocks that allow the user to specify dispersion tensors and particle start locations. In addition, it contains numerical parameters that control the functioning of the particle tracking simulation.","title":"Appendix A.1  Control"},{"location":"user-guide/appendix-A1.html#a11-initial-keyword-block","text":"Particle starting positions are specified in the INITIAL keyword block. The keyword block may be placed anywhere in the control file. The form of the INITIAL keyword block is as follows INITIAL ! case sensitive dist_type num_part ! conditional input depends on dist_type location_info ! conditional input depends on dist_type : ! repeat as needed The dist_type keyword specifies how particles are to be distributed. Allowed values are MANUAL , UNIFORM , and RANDOM (case sensitive). If MANUAL is specified then a particle location must be specified for each particle. In this case, the number of particles should be entered in the num_part field and start coordinates for each particle should be entered ( location_info field, one x,y,z triplet on each line). If RANDOM is specified, the particles are to be distributed randomly in a user- specified rectangular box. In this case, the number of particles should be entered in the num_part field and the location_info has two lines representing locations of minimum (first line) and maximum (second line) coordinates of the bounding box for the start region. The UNIFORM keyword is similar to the RANDOM keyword except that particles will be distributed uniformly in the region of interest. In this case, three integers should be entered in the num_part representing spacing in the x, y, and z directions. The location_info lines are identical to the RANDOM case.","title":"A.1.1   INITIAL keyword block"},{"location":"user-guide/appendix-A1.html#a12-dtensor-keyword-block","text":"Dispersion tensor information is given in the DTENSOR keyword block. The keyword block may be placed anywhere in the control file. The form of the INITIAL keyword block is as follows DTENSOR region_specifier ! type ! tensor type dispersivities ! conditional on type : ! repeat above three lines as many times as needed END ! terminates the keyword block The region_specifier comes in two forms. If three integers ( min max stride ) are given, then the region comprises the nodes between min and max (inclusive) with the specified stride. The value 0 for max is interpreted as the last node in the grid. This format is identical to FEHM\u2019s format for specifying nodes in a region. If region_specifier starts with a nonnumeric character, then it is interpreted as a filename that contains zone information. In this case, the first field of the region_specifier is the filename and the second field of the region_specifier is the zone number in the specified zone file. The zone file should be in FEHM zone file format (See Appendix A.2 Mesh Geometry Files). The type holds a keyword that specifies the type of the dispersion tensor. In Version 1.0, the only allowed value is BF denoting the Burnett and Frind tensor. The dispersivity_values required for the Burnett and Frind tensor are (in order) longitudinal dispersivity, horizontal transverse dispersivity, vertical transverse dispersivity, and molecular diffusion coefficient. The dispersivities have units of m. The molecular diffusion coefficient has units of m^2/\\mathrm{day} .","title":"A.1.2   DTENSOR keyword block"},{"location":"user-guide/appendix-A1.html#a13-numerical-control-parameters","text":"Several numerical control parameters may also be specified in the control file. If not defined in the control file, defaults will apply. The parameters are scalar values and may be written in any order. The form is parameter_name parameter_value where parameter_name is one of the following dtmax \u2013 maximum allowed value of time step in days. Optional. Defaults to 1000 dt0 \u2013 initial time step in days. Optional. Defaults to 0.01 maxstretch \u2013 maximum allowed time step relative to previous time step (dimensionless). Must be greater than 1. Optional. Defaults to 1.2 maxsteps \u2013 maximum number of time steps in the simulation. A particle is terminated if maxstep timesteps are taken. Optional defaults to 100000 dxtarget \u2013 Courant factor, maximum allowed time step relative to time required to advect across the cell. Optional. Defaults to 0.1 dttarget \u2013 maximum allowed time step as fraction of characteristic time to disperse across cell. Optional. Defaults to 0.1 toutfreq \u2013 number of time steps between output of trajectory data. If 0 is specified, no trajectory output is written. Optional. Defaults to 0","title":"A.1.3   Numerical control parameters"},{"location":"user-guide/appendix-A1.html#a14-example-control-files","text":"In this example shown in Figure A1-1, 10000 particles are released randomly in the region between (10,-50,-50) and (10,50,50). The region is indicated by 1 0 0 which is all grid nodes. The dispersivity_values are 40. for longitudinal dispersivity and 0. for horizontal transverse dispersivity, vertical transverse dispersivity, and molecular diffusion coefficient. Title \u2013 the title goes here dtmax 100 !maximum step size days dxtarget 0.1 !relative to grid size dttarget 0.1 ! relative to characteristic dispersion time maxstretch 1.3 maxsteps 100000 ! maximum number of steps allowed dt0 0.1 ! initial step days toutfreq 0 !no trajectory output INITIAL RANDOM 10000 10.0 -50.0 -50.0 10.0 50.0 50.0 DTENSOR 1 0 0 BF !burnett and frind tensor 40. 0.0 0.0 0.0 !dispersivity values END Figure A1-1. Example control file. In this example shown in Figure A1-2, different transport parameters are applied to different regions of the grid using FEHM style zone files. In this example, there are 5 node regions (zone numbers 4, 9, 11, 12, and 14) in the model domain and are defined in walk06337.h5_material.zone. The zone file format is described under cbound in Appendix A.2 Geometry . dtmax 365.25 dt0 0.10 maxstretch 1.3 maxsteps 100000 dxtarget 0.1 dttarget 0.1 seed 7127 toutfreq 0 INITIAL MANUAL 5 8200.2050 30.0000 1812.0000 8200.2050 30.0000 1826.0000 8200.6150 30.0000 1840.0000 8200.6150 30.0000 1854.0000 8200.6150 30.0000 1868.0000 DTENSOR walk06337.h5_material.zone 4 BF 1.0 0.1 0.1 0.0 walk06337.h5_material.zone 9 BF 3.0 0.3 0.1 0.0 walk06337.h5_material.zone 11 BF 10.0 1.0 1.0 0.0 walk06337.h5_material.zone 12 BF 2.0 0.1 0.1 0.0 walk06337.h5_material.zone 14 BF 5.0 0.5 0.5 0.0 END Figure A1-2. Example control file with multiple regions.","title":"A.1.4   Example control files"},{"location":"user-guide/appendix-A2.html","text":"Appendix A.2 Geometry Three files describing geometry of the computational grid are required, and a fourth is optional. It is anticipated that these files will be produced by the meshing software LaGriT , although any mesh generation software can be used provided the output is converted to the required format. The following image shows the tetrahedral mesh element and node numbers for the examples below. Figure A2-1. Example Mesh. Element edges and numbers are blue. Mesh node numbers are black (bottom) and red (top). A.2.1 Mesh fehmn The fehmn file provides the tetrahedral information (location of nodes and lists of nodes that compose each element). See the LaGriT and FEHM manuals for details. In Walkabout Version 1.0, the fehmn file must be provided in ASCII format. This example shown in Figure A2-2 is a mesh with 20 nodes and 24 tet (4 node) elements. coor 20 1 0.000000000000E+00 0.000000000000E+00 0.000000000000E+00 2 5.000000000000E+00 0.000000000000E+00 0.000000000000E+00 3 1.000000000000E+01 0.000000000000E+00 0.000000000000E+00 4 1.500000000000E+01 0.000000000000E+00 0.000000000000E+00 5 2.000000000000E+01 0.000000000000E+00 0.000000000000E+00 6 0.000000000000E+00 8.000000000000E+00 0.000000000000E+00 7 5.000000000000E+00 8.000000000000E+00 0.000000000000E+00 8 1.000000000000E+01 8.000000000000E+00 0.000000000000E+00 9 1.500000000000E+01 8.000000000000E+00 0.000000000000E+00 10 2.000000000000E+01 8.000000000000E+00 0.000000000000E+00 11 0.000000000000E+00 0.000000000000E+00 8.000000000000E+00 12 5.000000000000E+00 0.000000000000E+00 8.000000000000E+00 13 1.000000000000E+01 0.000000000000E+00 8.000000000000E+00 14 1.500000000000E+01 0.000000000000E+00 8.000000000000E+00 15 2.000000000000E+01 0.000000000000E+00 8.000000000000E+00 16 0.000000000000E+00 8.000000000000E+00 8.000000000000E+00 17 5.000000000000E+00 8.000000000000E+00 8.000000000000E+00 18 1.000000000000E+01 8.000000000000E+00 8.000000000000E+00 19 1.500000000000E+01 8.000000000000E+00 8.000000000000E+00 20 2.000000000000E+01 8.000000000000E+00 8.000000000000E+00 0 elem 4 24 1 3 12 7 8 2 10 15 19 20 3 4 13 8 9 4 9 14 19 10 5 9 14 18 19 6 7 12 17 8 7 7 12 16 17 8 4 13 9 14 9 4 14 9 5 10 8 12 17 13 11 5 14 10 15 12 3 13 8 4 13 3 12 8 13 14 8 13 17 18 15 8 13 18 9 16 1 11 6 2 17 14 15 19 10 18 2 11 7 12 19 9 14 10 5 20 2 11 6 7 21 7 11 16 12 22 6 11 16 7 23 9 13 18 14 24 2 12 7 3 stop Figure A2-2. Example fehmn mesh file. A.2.2 Geometric Coefficients stor The stor file represents a sparse coefficient matrix and is used for solving PDE on a triangular or tetrahedral Delaunay mesh. The stor format is written for FEHM input and includes information about nodal connectivity and interface areas. Walkabout requires the ratio of scalar area to distance for each node-to- node connection provided in this file. In Walkabout Version 1.0, the stor file must be provided in ASCII format. This example shows the stor file written for the mesh in Figure A2-1. The first 2 lines are header lines with file and model information. The third line are the matrix parameters NCOEFS, NUM_NODES, NCOEF+NUM_NODES+1, NUM_AREA_COEF, and NCONNECT_MAX. This is followed by sections for the voronoi volumes (for each node), Row counts, Row entries, and indices into area coefficients. The last section is the list of area coefficients. In general this is the area of each face of the Voronoi polygon associate with node i, face j. See full description at LaGriT STOR . fehmstor ascir8i4 LaGriT Sparse Matrix Voronoi Coefficients Thu Oct 17 13:41:37 20193-D Linear Diffusion Model (matbld3d_astor) 4 20 113 1 5 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 21 25 30 35 40 44 48 53 58 63 67 71 76 81 86 90 94 99 104 109 113 1 2 6 11 1 2 3 7 12 2 3 4 8 13 3 4 5 9 14 4 5 10 15 1 6 7 16 2 6 7 8 17 3 7 8 9 18 4 8 9 10 19 5 9 10 20 1 11 12 16 2 11 12 13 17 3 12 13 14 18 4 13 14 15 19 5 14 15 20 6 11 16 17 7 12 16 17 18 8 13 17 18 19 9 14 18 19 20 10 15 19 20 4 1 3 3 1 4 1 2 2 1 4 1 2 2 1 4 1 2 2 1 4 3 3 3 4 1 3 2 1 4 1 2 2 1 4 1 2 2 1 4 1 2 3 1 4 3 3 4 1 3 2 1 4 1 2 2 1 4 1 2 2 1 4 1 2 3 1 4 3 3 3 4 1 2 2 1 4 1 2 2 1 4 1 2 2 1 4 1 3 3 1 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 27 32 37 42 46 51 56 61 66 69 74 79 84 89 93 98 103 108 113 -3.200000000000E+00 -2.500000000000E+00 -1.250000000000E+00 0.000000000000E+00 Figure A2-3. Example stor geometric coefficients file. A.2.3 Element adjacency list ealist The ealist file provides information about element adjacency, which should not be confused with nodal connectivity. Element adjacency is not needed by FEHM, but is required by Walkabout. See the LaGriT manual for details on how to produce the element adjacency lists. This example shows the ealist file written for the mesh in Figure A2-1. Write adjacency information to an ascii file. Write list of all elements adjacent to each element. File format: elem_number ean_num e1 e2 ... en where -99 indicates an outside boundary. 1 4 6 -99 24 13 2 4 -99 -99 17 -99 3 4 15 -99 12 8 4 4 17 -99 5 19 5 4 -99 -99 23 4 6 4 10 -99 7 1 7 4 -99 -99 21 6 8 4 23 9 3 -99 9 4 19 -99 8 -99 10 4 -99 14 6 13 11 4 17 -99 19 -99 12 4 3 -99 13 -99 13 4 10 12 1 -99 14 4 -99 -99 10 15 15 4 23 -99 14 3 16 4 20 -99 -99 -99 17 4 2 4 -99 11 18 4 21 24 20 -99 19 4 11 -99 4 9 20 4 22 -99 16 18 21 4 -99 7 22 18 22 4 21 -99 -99 20 23 4 -99 5 15 8 24 4 1 -99 18 -99 Figure A2-4. Example ealist element adjacency file. A.2.4 Boundary Nodes cbound The cbound (closed boundary) file provides a list of nodes on boundaries that are closed to transport. It has the same format as the LaGriT outside zone file, but excludes outflow boundaries. A simple strategy for producing the cbound file is to use LaGriT to produce a list of all outside nodes, and then remove those nodes associated with outflow boundaries. In Version 1, external faces of cells on a boundary must aligned with the principal directions in the coordinate system. That is, boundary faces must be top, bottom, left, right, back or front. See the LaGriT manual. It is important to recognize, that this restriction only applies to cell faces on boundaries. Cell faces internal to the model have no such restrictions. A node/cell may have more than one no- transport boundary face associated with it, in which case it would appear more than once in the cbound file. For nodes on a no-transport boundary, Walkabout first attempts to reconstruct the nodal velocity using the unconstrained algorithm, Eq. 5. If this procedure results in inflow into the domain at the boundary node, the reconstructed velocity is used as is. If the unconstrained procedure results in outflow on a no-transport boundary, then the velocity reconstruction is repeated using the constrained procedure Eq. 7 to enforce the no-flow condition on the cell\u2019s boundary face. Particles are not allowed to disperse across boundaries that are closed to transport. In the walkabout.files, we have a line: cbound:outside_top_noflow.zone The file outside_top_noflow.zone has a list of node numbers that are the top outside of the mesh as shown in Figure A2-1 (red nodes). There are 10 nodes in this region and there is only one zone defined. The last line must be blank or start with the word \"stop\". zone 00001 top nnum 10 11 12 13 14 15 16 17 18 19 20 stop Figure A2-5. Example cbound noflow boundary zone.","title":"A.2 Geometry"},{"location":"user-guide/appendix-A2.html#appendix-a2-geometry","text":"Three files describing geometry of the computational grid are required, and a fourth is optional. It is anticipated that these files will be produced by the meshing software LaGriT , although any mesh generation software can be used provided the output is converted to the required format. The following image shows the tetrahedral mesh element and node numbers for the examples below. Figure A2-1. Example Mesh. Element edges and numbers are blue. Mesh node numbers are black (bottom) and red (top).","title":"Appendix A.2 Geometry"},{"location":"user-guide/appendix-A2.html#a21-mesh-fehmn","text":"The fehmn file provides the tetrahedral information (location of nodes and lists of nodes that compose each element). See the LaGriT and FEHM manuals for details. In Walkabout Version 1.0, the fehmn file must be provided in ASCII format. This example shown in Figure A2-2 is a mesh with 20 nodes and 24 tet (4 node) elements. coor 20 1 0.000000000000E+00 0.000000000000E+00 0.000000000000E+00 2 5.000000000000E+00 0.000000000000E+00 0.000000000000E+00 3 1.000000000000E+01 0.000000000000E+00 0.000000000000E+00 4 1.500000000000E+01 0.000000000000E+00 0.000000000000E+00 5 2.000000000000E+01 0.000000000000E+00 0.000000000000E+00 6 0.000000000000E+00 8.000000000000E+00 0.000000000000E+00 7 5.000000000000E+00 8.000000000000E+00 0.000000000000E+00 8 1.000000000000E+01 8.000000000000E+00 0.000000000000E+00 9 1.500000000000E+01 8.000000000000E+00 0.000000000000E+00 10 2.000000000000E+01 8.000000000000E+00 0.000000000000E+00 11 0.000000000000E+00 0.000000000000E+00 8.000000000000E+00 12 5.000000000000E+00 0.000000000000E+00 8.000000000000E+00 13 1.000000000000E+01 0.000000000000E+00 8.000000000000E+00 14 1.500000000000E+01 0.000000000000E+00 8.000000000000E+00 15 2.000000000000E+01 0.000000000000E+00 8.000000000000E+00 16 0.000000000000E+00 8.000000000000E+00 8.000000000000E+00 17 5.000000000000E+00 8.000000000000E+00 8.000000000000E+00 18 1.000000000000E+01 8.000000000000E+00 8.000000000000E+00 19 1.500000000000E+01 8.000000000000E+00 8.000000000000E+00 20 2.000000000000E+01 8.000000000000E+00 8.000000000000E+00 0 elem 4 24 1 3 12 7 8 2 10 15 19 20 3 4 13 8 9 4 9 14 19 10 5 9 14 18 19 6 7 12 17 8 7 7 12 16 17 8 4 13 9 14 9 4 14 9 5 10 8 12 17 13 11 5 14 10 15 12 3 13 8 4 13 3 12 8 13 14 8 13 17 18 15 8 13 18 9 16 1 11 6 2 17 14 15 19 10 18 2 11 7 12 19 9 14 10 5 20 2 11 6 7 21 7 11 16 12 22 6 11 16 7 23 9 13 18 14 24 2 12 7 3 stop Figure A2-2. Example fehmn mesh file.","title":"A.2.1  Mesh fehmn"},{"location":"user-guide/appendix-A2.html#a22-geometric-coefficients-stor","text":"The stor file represents a sparse coefficient matrix and is used for solving PDE on a triangular or tetrahedral Delaunay mesh. The stor format is written for FEHM input and includes information about nodal connectivity and interface areas. Walkabout requires the ratio of scalar area to distance for each node-to- node connection provided in this file. In Walkabout Version 1.0, the stor file must be provided in ASCII format. This example shows the stor file written for the mesh in Figure A2-1. The first 2 lines are header lines with file and model information. The third line are the matrix parameters NCOEFS, NUM_NODES, NCOEF+NUM_NODES+1, NUM_AREA_COEF, and NCONNECT_MAX. This is followed by sections for the voronoi volumes (for each node), Row counts, Row entries, and indices into area coefficients. The last section is the list of area coefficients. In general this is the area of each face of the Voronoi polygon associate with node i, face j. See full description at LaGriT STOR . fehmstor ascir8i4 LaGriT Sparse Matrix Voronoi Coefficients Thu Oct 17 13:41:37 20193-D Linear Diffusion Model (matbld3d_astor) 4 20 113 1 5 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 4.000000000000E+01 8.000000000000E+01 8.000000000000E+01 8.000000000000E+01 4.000000000000E+01 21 25 30 35 40 44 48 53 58 63 67 71 76 81 86 90 94 99 104 109 113 1 2 6 11 1 2 3 7 12 2 3 4 8 13 3 4 5 9 14 4 5 10 15 1 6 7 16 2 6 7 8 17 3 7 8 9 18 4 8 9 10 19 5 9 10 20 1 11 12 16 2 11 12 13 17 3 12 13 14 18 4 13 14 15 19 5 14 15 20 6 11 16 17 7 12 16 17 18 8 13 17 18 19 9 14 18 19 20 10 15 19 20 4 1 3 3 1 4 1 2 2 1 4 1 2 2 1 4 1 2 2 1 4 3 3 3 4 1 3 2 1 4 1 2 2 1 4 1 2 2 1 4 1 2 3 1 4 3 3 4 1 3 2 1 4 1 2 2 1 4 1 2 2 1 4 1 2 3 1 4 3 3 3 4 1 2 2 1 4 1 2 2 1 4 1 2 2 1 4 1 3 3 1 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 27 32 37 42 46 51 56 61 66 69 74 79 84 89 93 98 103 108 113 -3.200000000000E+00 -2.500000000000E+00 -1.250000000000E+00 0.000000000000E+00 Figure A2-3. Example stor geometric coefficients file.","title":"A.2.2  Geometric Coefficients stor"},{"location":"user-guide/appendix-A2.html#a23-element-adjacency-list-ealist","text":"The ealist file provides information about element adjacency, which should not be confused with nodal connectivity. Element adjacency is not needed by FEHM, but is required by Walkabout. See the LaGriT manual for details on how to produce the element adjacency lists. This example shows the ealist file written for the mesh in Figure A2-1. Write adjacency information to an ascii file. Write list of all elements adjacent to each element. File format: elem_number ean_num e1 e2 ... en where -99 indicates an outside boundary. 1 4 6 -99 24 13 2 4 -99 -99 17 -99 3 4 15 -99 12 8 4 4 17 -99 5 19 5 4 -99 -99 23 4 6 4 10 -99 7 1 7 4 -99 -99 21 6 8 4 23 9 3 -99 9 4 19 -99 8 -99 10 4 -99 14 6 13 11 4 17 -99 19 -99 12 4 3 -99 13 -99 13 4 10 12 1 -99 14 4 -99 -99 10 15 15 4 23 -99 14 3 16 4 20 -99 -99 -99 17 4 2 4 -99 11 18 4 21 24 20 -99 19 4 11 -99 4 9 20 4 22 -99 16 18 21 4 -99 7 22 18 22 4 21 -99 -99 20 23 4 -99 5 15 8 24 4 1 -99 18 -99 Figure A2-4. Example ealist element adjacency file.","title":"A.2.3   Element adjacency list ealist"},{"location":"user-guide/appendix-A2.html#a24-boundary-nodes-cbound","text":"The cbound (closed boundary) file provides a list of nodes on boundaries that are closed to transport. It has the same format as the LaGriT outside zone file, but excludes outflow boundaries. A simple strategy for producing the cbound file is to use LaGriT to produce a list of all outside nodes, and then remove those nodes associated with outflow boundaries. In Version 1, external faces of cells on a boundary must aligned with the principal directions in the coordinate system. That is, boundary faces must be top, bottom, left, right, back or front. See the LaGriT manual. It is important to recognize, that this restriction only applies to cell faces on boundaries. Cell faces internal to the model have no such restrictions. A node/cell may have more than one no- transport boundary face associated with it, in which case it would appear more than once in the cbound file. For nodes on a no-transport boundary, Walkabout first attempts to reconstruct the nodal velocity using the unconstrained algorithm, Eq. 5. If this procedure results in inflow into the domain at the boundary node, the reconstructed velocity is used as is. If the unconstrained procedure results in outflow on a no-transport boundary, then the velocity reconstruction is repeated using the constrained procedure Eq. 7 to enforce the no-flow condition on the cell\u2019s boundary face. Particles are not allowed to disperse across boundaries that are closed to transport. In the walkabout.files, we have a line: cbound:outside_top_noflow.zone The file outside_top_noflow.zone has a list of node numbers that are the top outside of the mesh as shown in Figure A2-1 (red nodes). There are 10 nodes in this region and there is only one zone defined. The last line must be blank or start with the word \"stop\". zone 00001 top nnum 10 11 12 13 14 15 16 17 18 19 20 stop Figure A2-5. Example cbound noflow boundary zone.","title":"A.2.4  Boundary Nodes cbound"},{"location":"user-guide/appendix-A3.html","text":"Appendix A.3 Model These file are written by the modeling application. The fin (FEHM) or ama (Amanzi) file provides the internodal liquid flux values. The avs file provides Porosity, liquid saturation and liquid density used by the model application. See FEHM or Amanzi documentation for more on these files. Note: The order of values in these files must be the same order as the node numbering in the Geometry files. A.3.1 Flux fin or ama The fin flux file is an FEHM restart file in ASCII format. The file includes the number of mass flux values followed by mass flux value (kg/s) for each connection of each node, starting with node 1. If the liquid fluxes are not found in the fin file, Walkabout will terminate. Figure A3-1 shows an example for 20 nodes. FEHM V3.4.0lbUbuntu16 19-10-30 11/05/2019 15:43:07 Head versus Pressure Test - Head formulation 365.00000000000000 20 nddp pressure 1.467096705810299 1.467096705805431 1.467096705823175 1.467096705822709 1.467096705836050 1.467096705801854 1.467096705814071 1.467096705814072 1.467096705832279 1.467096705826289 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 liquid flux 142 0.000000000000000 0.1938474885591716E-11 0.1313687996742065E-11 0.1911693415726907E-10 -0.1938474885591716E-11 0.000000000000000 -0.7065622914649585E-11 0.000000000000000 -0.2687820700701320E-11 0.000000000000000 0.3808242471967515E-10 0.7065622914649585E-11 0.000000000000000 0.1852440307127056E-12 0.000000000000000 0.2831989962372493E-11 0.000000000000000 0.3863442649912402E-10 -0.1852440307127056E-12 0.000000000000000 -0.5312303637798873E-11 0.000000000000000 -0.2977264498689923E-11 0.000000000000000 0.3861995462524857E-10 0.5312303637798873E-11 0.000000000000000 0.000000000000000 0.1518301965630428E-11 0.000000000000000 0.1951748899641146E-10 -0.1313687996742065E-11 -0.000000000000000 0.000000000000000 -0.4864976882965662E-11 0.000000000000000 0.1898556528211013E-10 0.2687820700701320E-11 -0.000000000000000 0.4864976882965662E-11 0.000000000000000 -0.2652659151017264E-15 0.000000000000000 0.000000000000000 0.000000000000000 0.3835120691436295E-10 -0.2831989962372493E-11 -0.000000000000000 0.2652659151017264E-15 0.000000000000000 -0.7250601679447189E-11 0.000000000000000 0.000000000000000 0.000000000000000 0.3835122750170753E-10 0.2977264498689923E-11 -0.000000000000000 0.7250601679447189E-11 0.000000000000000 0.2385447952538125E-11 0.000000000000000 0.000000000000000 0.000000000000000 0.3891768108237089E-10 -0.1518301965630428E-11 -0.2385447952538125E-11 0.000000000000000 0.000000000000000 0.000000000000000 0.000000000000000 0.1936565887415391E-10 -0.1911693415726907E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.000000000000000 -0.3808242471967515E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.3863442649912402E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.3861995462524857E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.1951748899641146E-10 -0.000000000000000 0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.1898556528211013E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.3835120691436295E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.3835122750170753E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.3891768108237089E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.1936565887415391E-10 0.000000000000000 Figure A3-1 fin file with flux values The ama flux file is written by Amanzi. The model velocity fields are calculated from the cell centers to the vertices in node order Vx, Vy, Vz. The first line of the file is the number of nodes. Figure A3-2 shows an example for 20 nodes. 20 0 8.30044e-06 0 1.93481e-16 1 8.29954e-06 6.26255e-10 4.79135e-11 2 8.29736e-06 0 -1.41345e-17 3 8.29247e-06 2.48663e-09 1.76177e-10 4 8.2853e-06 4.4489e-17 -1.47602e-16 5 8.27388e-06 5.36507e-09 3.57899e-10 6 8.25954e-06 -4.4489e-17 1.04503e-16 7 8.24095e-06 8.23985e-09 5.3618e-10 8 8.22015e-06 -8.8978e-17 1.78651e-16 9 8.19713e-06 9.74832e-09 6.33088e-10 10 8.17356e-06 -8.8978e-17 2.52799e-16 11 8.15041e-06 9.47623e-09 6.20643e-10 12 8.12821e-06 -4.4489e-17 -5.86235e-17 13 8.10821e-06 7.9846e-09 5.28764e-10 14 8.08992e-06 4.4489e-17 6.00138e-17 15 8.07444e-06 6.07319e-09 4.06191e-10 16 8.06076e-06 4.4489e-17 6.00138e-17 17 8.0497e-06 4.27967e-09 2.88404e-10 18 8.04018e-06 -4.4489e-17 -1.77261e-16 19 8.0328e-06 2.81351e-09 1.90585e-10 Figure A3-2 ama file with flux values A.3.2 Properties avs Porosity, liquid saturation and liquid density are read from an ASCII avs file produced by the model application (the contour macro in FEHM). This uses an AVS file format for node attributes. The first line of the header indicates number of attributes followed by integer 1 indicating scalar value for each of the four attributes. The remainder of the header is a list of attribute names with optional dimension. The header is followed by columns of node number and values for the property data (attributes). Figure A3-3 shows an example for 20 nodes. 04 1 1 1 1 Liquid Pressure (MPa), (MPa) Saturation, (no dim) Porosity, (no dim) Liquid Density (kg/m**3), (kg/m**3) 0001 1.46709671 1.00000000 140.000000 0.100000000 0002 1.46709671 1.00000000 140.000000 0.100000000 0003 1.46709671 1.00000000 140.000000 0.100000000 0004 1.46709671 1.00000000 140.000000 0.100000000 0005 1.46709671 1.00000000 140.000000 0.100000000 0006 1.46709671 1.00000000 140.000000 0.100000000 0007 1.46709671 1.00000000 140.000000 0.100000000 0008 1.46709671 1.00000000 140.000000 0.100000000 0009 1.46709671 1.00000000 140.000000 0.100000000 0010 1.46709671 1.00000000 140.000000 0.100000000 0011 1.38897689 1.00000000 140.000000 0.100000000 0012 1.38897689 1.00000000 140.000000 0.100000000 0013 1.38897689 1.00000000 140.000000 0.100000000 0014 1.38897689 1.00000000 140.000000 0.100000000 0015 1.38897689 1.00000000 140.000000 0.100000000 0016 1.38897689 1.00000000 140.000000 0.100000000 0017 1.38897689 1.00000000 140.000000 0.100000000 0018 1.38897689 1.00000000 140.000000 0.100000000 0019 1.38897689 1.00000000 140.000000 0.100000000 0020 1.38897689 1.00000000 140.000000 0.100000000 Figure A3-3 avs file with property values","title":"A.3 Model"},{"location":"user-guide/appendix-A3.html#appendix-a3-model","text":"These file are written by the modeling application. The fin (FEHM) or ama (Amanzi) file provides the internodal liquid flux values. The avs file provides Porosity, liquid saturation and liquid density used by the model application. See FEHM or Amanzi documentation for more on these files. Note: The order of values in these files must be the same order as the node numbering in the Geometry files.","title":"Appendix A.3  Model"},{"location":"user-guide/appendix-A3.html#a31-flux-fin-or-ama","text":"The fin flux file is an FEHM restart file in ASCII format. The file includes the number of mass flux values followed by mass flux value (kg/s) for each connection of each node, starting with node 1. If the liquid fluxes are not found in the fin file, Walkabout will terminate. Figure A3-1 shows an example for 20 nodes. FEHM V3.4.0lbUbuntu16 19-10-30 11/05/2019 15:43:07 Head versus Pressure Test - Head formulation 365.00000000000000 20 nddp pressure 1.467096705810299 1.467096705805431 1.467096705823175 1.467096705822709 1.467096705836050 1.467096705801854 1.467096705814071 1.467096705814072 1.467096705832279 1.467096705826289 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 1.388976889740393 liquid flux 142 0.000000000000000 0.1938474885591716E-11 0.1313687996742065E-11 0.1911693415726907E-10 -0.1938474885591716E-11 0.000000000000000 -0.7065622914649585E-11 0.000000000000000 -0.2687820700701320E-11 0.000000000000000 0.3808242471967515E-10 0.7065622914649585E-11 0.000000000000000 0.1852440307127056E-12 0.000000000000000 0.2831989962372493E-11 0.000000000000000 0.3863442649912402E-10 -0.1852440307127056E-12 0.000000000000000 -0.5312303637798873E-11 0.000000000000000 -0.2977264498689923E-11 0.000000000000000 0.3861995462524857E-10 0.5312303637798873E-11 0.000000000000000 0.000000000000000 0.1518301965630428E-11 0.000000000000000 0.1951748899641146E-10 -0.1313687996742065E-11 -0.000000000000000 0.000000000000000 -0.4864976882965662E-11 0.000000000000000 0.1898556528211013E-10 0.2687820700701320E-11 -0.000000000000000 0.4864976882965662E-11 0.000000000000000 -0.2652659151017264E-15 0.000000000000000 0.000000000000000 0.000000000000000 0.3835120691436295E-10 -0.2831989962372493E-11 -0.000000000000000 0.2652659151017264E-15 0.000000000000000 -0.7250601679447189E-11 0.000000000000000 0.000000000000000 0.000000000000000 0.3835122750170753E-10 0.2977264498689923E-11 -0.000000000000000 0.7250601679447189E-11 0.000000000000000 0.2385447952538125E-11 0.000000000000000 0.000000000000000 0.000000000000000 0.3891768108237089E-10 -0.1518301965630428E-11 -0.2385447952538125E-11 0.000000000000000 0.000000000000000 0.000000000000000 0.000000000000000 0.1936565887415391E-10 -0.1911693415726907E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.000000000000000 -0.3808242471967515E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.3863442649912402E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.3861995462524857E-10 -0.000000000000000 -0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.1951748899641146E-10 -0.000000000000000 0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.1898556528211013E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 -0.000000000000000 -0.3835120691436295E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.3835122750170753E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.3891768108237089E-10 -0.000000000000000 0.000000000000000 -0.000000000000000 0.000000000000000 0.000000000000000 -0.000000000000000 -0.1936565887415391E-10 0.000000000000000 Figure A3-1 fin file with flux values The ama flux file is written by Amanzi. The model velocity fields are calculated from the cell centers to the vertices in node order Vx, Vy, Vz. The first line of the file is the number of nodes. Figure A3-2 shows an example for 20 nodes. 20 0 8.30044e-06 0 1.93481e-16 1 8.29954e-06 6.26255e-10 4.79135e-11 2 8.29736e-06 0 -1.41345e-17 3 8.29247e-06 2.48663e-09 1.76177e-10 4 8.2853e-06 4.4489e-17 -1.47602e-16 5 8.27388e-06 5.36507e-09 3.57899e-10 6 8.25954e-06 -4.4489e-17 1.04503e-16 7 8.24095e-06 8.23985e-09 5.3618e-10 8 8.22015e-06 -8.8978e-17 1.78651e-16 9 8.19713e-06 9.74832e-09 6.33088e-10 10 8.17356e-06 -8.8978e-17 2.52799e-16 11 8.15041e-06 9.47623e-09 6.20643e-10 12 8.12821e-06 -4.4489e-17 -5.86235e-17 13 8.10821e-06 7.9846e-09 5.28764e-10 14 8.08992e-06 4.4489e-17 6.00138e-17 15 8.07444e-06 6.07319e-09 4.06191e-10 16 8.06076e-06 4.4489e-17 6.00138e-17 17 8.0497e-06 4.27967e-09 2.88404e-10 18 8.04018e-06 -4.4489e-17 -1.77261e-16 19 8.0328e-06 2.81351e-09 1.90585e-10 Figure A3-2 ama file with flux values","title":"A.3.1 Flux fin or ama"},{"location":"user-guide/appendix-A3.html#a32-properties-avs","text":"Porosity, liquid saturation and liquid density are read from an ASCII avs file produced by the model application (the contour macro in FEHM). This uses an AVS file format for node attributes. The first line of the header indicates number of attributes followed by integer 1 indicating scalar value for each of the four attributes. The remainder of the header is a list of attribute names with optional dimension. The header is followed by columns of node number and values for the property data (attributes). Figure A3-3 shows an example for 20 nodes. 04 1 1 1 1 Liquid Pressure (MPa), (MPa) Saturation, (no dim) Porosity, (no dim) Liquid Density (kg/m**3), (kg/m**3) 0001 1.46709671 1.00000000 140.000000 0.100000000 0002 1.46709671 1.00000000 140.000000 0.100000000 0003 1.46709671 1.00000000 140.000000 0.100000000 0004 1.46709671 1.00000000 140.000000 0.100000000 0005 1.46709671 1.00000000 140.000000 0.100000000 0006 1.46709671 1.00000000 140.000000 0.100000000 0007 1.46709671 1.00000000 140.000000 0.100000000 0008 1.46709671 1.00000000 140.000000 0.100000000 0009 1.46709671 1.00000000 140.000000 0.100000000 0010 1.46709671 1.00000000 140.000000 0.100000000 0011 1.38897689 1.00000000 140.000000 0.100000000 0012 1.38897689 1.00000000 140.000000 0.100000000 0013 1.38897689 1.00000000 140.000000 0.100000000 0014 1.38897689 1.00000000 140.000000 0.100000000 0015 1.38897689 1.00000000 140.000000 0.100000000 0016 1.38897689 1.00000000 140.000000 0.100000000 0017 1.38897689 1.00000000 140.000000 0.100000000 0018 1.38897689 1.00000000 140.000000 0.100000000 0019 1.38897689 1.00000000 140.000000 0.100000000 0020 1.38897689 1.00000000 140.000000 0.100000000 Figure A3-3 avs file with property values","title":"A.3.2 Properties  avs"},{"location":"user-guide/appendix-A4.html","text":"Appendix A.4 Output Two output files are always produced, a log file that echoes back input parameters and a reduced sptr2 file for PLUMECALC. The latter may be read directly by PLUMECALC. In addition, to the two files always produced, a trajectory file trajout may be produced if the toutfreq parameter is set greater than 0. See Appendix A.1 Control . Walkabout and SPTR use different streamline tracing algorithms. The good agreement between the two thus helps build confidence in bothe codes. This is done in Verification Test 3 comparing sptr2 to trajout results, see Verification Test 3, section 4.3 A.4.1 Plumecalc particle tracks sptr2 This streamline particle tracking file is written in FEHM sptr2 ASCII format and can be read by PLUMECALC. The number of particles used in the simulation, followed by the particle number, time that the particle is leaving a cell (days), and the cell that the particle is leaving, for each travel segment of each particle. The example in Figure A4-1 is walkabout.sptr2 written for Test 3 (file walkabout.sptr2.ans is a copy). walkabout 1.2 20191008170857.604 dtmax 10.0 16 Part_no time_days cell_leaving 1 15.042780 7022 1 73.054332 7023 1 105.27757 7024 1 129.20500 7050 1 185.07995 7051 1 206.95252 7052 (...) 16 341.17299 10471 16 347.76572 10472 16 359.72616 10446 16 380.07722 10447 16 401.86738 10448 16 425.39493 10449 16 449.87253 10450 16 475.15073 10425 16 487.42966 10426 Figure A4-1. This example is the file walkabout.sptr2 written for Test 3. A.4.2 Walkabout particle tracks trajout The walkabout particle file format is as follows. walkabout title ! header line [dtmax or tmax] max_step ! max time step npart ! number particle tracks nsteps ! number of steps for this track t1 x1 y1 z1 ! spatial position at time t1 : ! repeat above line for a total of nsteps : ! repeat each particle block for a total for npart particles The example in Figure A4-2 is traj.out written for Test 3 (file traj.out.ans is a copy). The max time steps is 10. The file contains 16 particle tracks. The first particle track has 1355 lines with time, x, y, z The next particle track has 1284 lines with time, x, y, z This is repeated for each of the 16 particle tracks. walkabout 1.2 20160727132144.729 dtmax 10.0 16 1355 0.0000000 5.0000000 40.000000 40.000000 0.23100000E-01 5.0015968 40.000247 40.000000 0.51051000E-01 5.0035288 40.000545 40.000000 0.84871710E-01 5.0058666 40.000907 40.000000 (...) 918.26953 99.779548 16.224802 39.999271 919.48875 99.908511 16.224545 39.999271 920.09356 99.972493 16.224516 39.999271 1284 0.0000000 5.0000000 60.000000 40.000000 0.23100000E-01 5.0027597 60.000282 40.000000 0.51051000E-01 5.0060991 60.000623 40.000000 0.84871710E-01 5.0101397 60.001036 40.000000 0.12579477 5.0150290 60.001537 40.000000 (...) Figure A4-2. This example is the file traj.out written for Test 3.","title":"A.4 Output"},{"location":"user-guide/appendix-A4.html#appendix-a4-output","text":"Two output files are always produced, a log file that echoes back input parameters and a reduced sptr2 file for PLUMECALC. The latter may be read directly by PLUMECALC. In addition, to the two files always produced, a trajectory file trajout may be produced if the toutfreq parameter is set greater than 0. See Appendix A.1 Control . Walkabout and SPTR use different streamline tracing algorithms. The good agreement between the two thus helps build confidence in bothe codes. This is done in Verification Test 3 comparing sptr2 to trajout results, see Verification Test 3, section 4.3","title":"Appendix A.4  Output"},{"location":"user-guide/appendix-A4.html#a41-plumecalc-particle-tracks-sptr2","text":"This streamline particle tracking file is written in FEHM sptr2 ASCII format and can be read by PLUMECALC. The number of particles used in the simulation, followed by the particle number, time that the particle is leaving a cell (days), and the cell that the particle is leaving, for each travel segment of each particle. The example in Figure A4-1 is walkabout.sptr2 written for Test 3 (file walkabout.sptr2.ans is a copy). walkabout 1.2 20191008170857.604 dtmax 10.0 16 Part_no time_days cell_leaving 1 15.042780 7022 1 73.054332 7023 1 105.27757 7024 1 129.20500 7050 1 185.07995 7051 1 206.95252 7052 (...) 16 341.17299 10471 16 347.76572 10472 16 359.72616 10446 16 380.07722 10447 16 401.86738 10448 16 425.39493 10449 16 449.87253 10450 16 475.15073 10425 16 487.42966 10426 Figure A4-1. This example is the file walkabout.sptr2 written for Test 3.","title":"A.4.1 Plumecalc particle tracks sptr2"},{"location":"user-guide/appendix-A4.html#a42-walkabout-particle-tracks-trajout","text":"The walkabout particle file format is as follows. walkabout title ! header line [dtmax or tmax] max_step ! max time step npart ! number particle tracks nsteps ! number of steps for this track t1 x1 y1 z1 ! spatial position at time t1 : ! repeat above line for a total of nsteps : ! repeat each particle block for a total for npart particles The example in Figure A4-2 is traj.out written for Test 3 (file traj.out.ans is a copy). The max time steps is 10. The file contains 16 particle tracks. The first particle track has 1355 lines with time, x, y, z The next particle track has 1284 lines with time, x, y, z This is repeated for each of the 16 particle tracks. walkabout 1.2 20160727132144.729 dtmax 10.0 16 1355 0.0000000 5.0000000 40.000000 40.000000 0.23100000E-01 5.0015968 40.000247 40.000000 0.51051000E-01 5.0035288 40.000545 40.000000 0.84871710E-01 5.0058666 40.000907 40.000000 (...) 918.26953 99.779548 16.224802 39.999271 919.48875 99.908511 16.224545 39.999271 920.09356 99.972493 16.224516 39.999271 1284 0.0000000 5.0000000 60.000000 40.000000 0.23100000E-01 5.0027597 60.000282 40.000000 0.51051000E-01 5.0060991 60.000623 40.000000 0.84871710E-01 5.0101397 60.001036 40.000000 0.12579477 5.0150290 60.001537 40.000000 (...) Figure A4-2. This example is the file traj.out written for Test 3.","title":"A.4.2 Walkabout particle tracks trajout"},{"location":"user-guide/references.html","text":"References T. Amemiya. Advanced econometrics. Harvard University Press. 1985. R.D. Burnett and E. O. Frind. Simulation of contaminant transport in three dimensions, 2, Dimensionality effects, Water Resour. Res., 23, 695\u2013 705, 1987. A. Kreft and A. Zuber, \u201cOn the Physical Meaning of the Dispersion Equation and its Solutions for Different Initial and Boundary Conditions.\u201d Chemical Engineering Science, 33, 1471-1480. 1978. T.N. Narasimhan and P. A. Witherspoon, An integrated finite difference method for analyzing fluid flow in porous media, Water Resour. Res., 12(1), 57\u201364, doi:10.1029/WR012i001p00057. 1976. B.A. Robinson, Z.V. Dash, and G. Srinivasan, \u201cA particle tracking transport method for the simulation of resident and flux-averaged concentration of solute plumes in groundwater models.\u201d, Comput. Geosci. 14(14), 779-792, DOI: 10.1007/s10596-010-9190-6. 2010. S. Painter, V. Cvetkovic, J. Mancillas, O. Pensado, \u201cRandom Walk Particle Tracking Methods for Simulating Transport with Retention and First-order Transformation.\u201d Water Resources Research, 44, doi:10.1029/2007WR005944. 2008. S. Painter, C.W. Gable and S. Kelkar. \u201cPathline Tracing on Unstructured Control Volume Grids.\u201d submitted 2011. D.W. Pollock. Semi-analytical computation of path lines for finite-difference models. Ground Water, 26(6):743\u2013750, 1988. G. A. Zyvoloski (2007) FEHM: A control volume finite element code for simulating subsurface multi-phase multi-fluid heat and mass transfer. Los Alamos Unclassified Report LA-UR-07-3359.","title":"References"},{"location":"user-guide/references.html#references","text":"T. Amemiya. Advanced econometrics. Harvard University Press. 1985. R.D. Burnett and E. O. Frind. Simulation of contaminant transport in three dimensions, 2, Dimensionality effects, Water Resour. Res., 23, 695\u2013 705, 1987. A. Kreft and A. Zuber, \u201cOn the Physical Meaning of the Dispersion Equation and its Solutions for Different Initial and Boundary Conditions.\u201d Chemical Engineering Science, 33, 1471-1480. 1978. T.N. Narasimhan and P. A. Witherspoon, An integrated finite difference method for analyzing fluid flow in porous media, Water Resour. Res., 12(1), 57\u201364, doi:10.1029/WR012i001p00057. 1976. B.A. Robinson, Z.V. Dash, and G. Srinivasan, \u201cA particle tracking transport method for the simulation of resident and flux-averaged concentration of solute plumes in groundwater models.\u201d, Comput. Geosci. 14(14), 779-792, DOI: 10.1007/s10596-010-9190-6. 2010. S. Painter, V. Cvetkovic, J. Mancillas, O. Pensado, \u201cRandom Walk Particle Tracking Methods for Simulating Transport with Retention and First-order Transformation.\u201d Water Resources Research, 44, doi:10.1029/2007WR005944. 2008. S. Painter, C.W. Gable and S. Kelkar. \u201cPathline Tracing on Unstructured Control Volume Grids.\u201d submitted 2011. D.W. Pollock. Semi-analytical computation of path lines for finite-difference models. Ground Water, 26(6):743\u2013750, 1988. G. A. Zyvoloski (2007) FEHM: A control volume finite element code for simulating subsurface multi-phase multi-fluid heat and mass transfer. Los Alamos Unclassified Report LA-UR-07-3359.","title":"References"}]}